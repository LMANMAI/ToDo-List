[{"L:\\practicas\\proyects\\taskapp\\cliente\\src\\index.js":"1","L:\\practicas\\proyects\\taskapp\\cliente\\src\\App.js":"2","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoContext.js":"3","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoState.js":"4","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoReducer.js":"5","L:\\practicas\\proyects\\taskapp\\cliente\\src\\types\\index.js":"6","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskState.js":"7","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskContext.js":"8","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskReducer.js":"9","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaState.js":"10","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaContext.js":"11","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaReducer.js":"12","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authState.js":"13","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authContext.js":"14","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authReducer.js":"15","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\axios.js":"16","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\tokenAuth.js":"17","L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\PrivateRoute.js":"18","L:\\practicas\\githubclones\\TaskProyectView\\src\\index.js":"19","L:\\practicas\\githubclones\\TaskProyectView\\src\\App.js":"20","L:\\practicas\\githubclones\\TaskProyectView\\src\\routes\\index.jsx":"21","L:\\practicas\\githubclones\\TaskProyectView\\src\\routes\\PrivateRoute.js":"22","L:\\practicas\\githubclones\\TaskProyectView\\src\\config\\tokenAuth.js":"23","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\index.jsx":"24","L:\\practicas\\githubclones\\TaskProyectView\\src\\config\\axios.js":"25","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\index.jsx":"26","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\auth\\authContext.js":"27","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\auth\\authState.js":"28","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\task\\taskState.js":"29","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\proyects\\proyectoState.js":"30","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\alertas\\alertaState.js":"31","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\animations\\AnimationState.jsx":"32","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\auth\\authReducer.js":"33","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\task\\taskContext.js":"34","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\task\\taskReducer.js":"35","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\proyects\\proyectoContext.js":"36","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\proyects\\proyectoReducer.js":"37","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Auth\\index.jsx":"38","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\index.jsx":"39","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\alertas\\alertaReducer.js":"40","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\alertas\\alertaContext.js":"41","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\animations\\AnimationReducer.jsx":"42","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\animations\\AnimationContext.jsx":"43","L:\\practicas\\githubclones\\TaskProyectView\\src\\types\\index.js":"44","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Auth\\Login\\index.jsx":"45","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Auth\\Signin\\index.jsx":"46","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\SideBar\\index.jsx":"47","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\Container\\index.jsx":"48","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\NewProyect.jsx":"49","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\ProyectList.jsx":"50","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\EndProyects.jsx":"51","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\Proyect.jsx":"52","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\FormTask.jsx":"53","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\TaskBody.jsx":"54","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\TaskList.jsx":"55","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\Task.jsx":"56"},{"size":251,"mtime":1615517947782,"results":"57","hashOfConfig":"58"},{"size":135,"mtime":1615505479454,"results":"59","hashOfConfig":"58"},{"size":110,"mtime":1611726567576,"results":"60","hashOfConfig":"58"},{"size":5149,"mtime":1615918682387,"results":"61","hashOfConfig":"58"},{"size":3243,"mtime":1613797795009,"results":"62","hashOfConfig":"58"},{"size":1499,"mtime":1616769337981,"results":"63","hashOfConfig":"58"},{"size":3163,"mtime":1613878458729,"results":"64","hashOfConfig":"58"},{"size":105,"mtime":1612239337757,"results":"65","hashOfConfig":"58"},{"size":1433,"mtime":1613800492482,"results":"66","hashOfConfig":"58"},{"size":1087,"mtime":1613516172440,"results":"67","hashOfConfig":"58"},{"size":111,"mtime":1613371219829,"results":"68","hashOfConfig":"58"},{"size":403,"mtime":1613514197880,"results":"69","hashOfConfig":"58"},{"size":3801,"mtime":1615752537667,"results":"70","hashOfConfig":"58"},{"size":105,"mtime":1613517890339,"results":"71","hashOfConfig":"58"},{"size":1223,"mtime":1613880291126,"results":"72","hashOfConfig":"58"},{"size":144,"mtime":1613892765094,"results":"73","hashOfConfig":"58"},{"size":271,"mtime":1613538990777,"results":"74","hashOfConfig":"58"},{"size":636,"mtime":1615700351418,"results":"75","hashOfConfig":"58"},{"size":263,"mtime":1617735826301,"results":"76","hashOfConfig":"77"},{"size":145,"mtime":1617735826278,"results":"78","hashOfConfig":"77"},{"size":1169,"mtime":1617735826336,"results":"79","hashOfConfig":"77"},{"size":636,"mtime":1617735826336,"results":"80","hashOfConfig":"77"},{"size":271,"mtime":1617735826288,"results":"81","hashOfConfig":"77"},{"size":100,"mtime":1617735826335,"results":"82","hashOfConfig":"77"},{"size":144,"mtime":1617735826286,"results":"83","hashOfConfig":"77"},{"size":323,"mtime":1617735826296,"results":"84","hashOfConfig":"77"},{"size":105,"mtime":1617735826294,"results":"85","hashOfConfig":"77"},{"size":3801,"mtime":1617735826295,"results":"86","hashOfConfig":"77"},{"size":3163,"mtime":1617735826301,"results":"87","hashOfConfig":"77"},{"size":5300,"mtime":1617858982785,"results":"88","hashOfConfig":"77"},{"size":1087,"mtime":1617735826291,"results":"89","hashOfConfig":"77"},{"size":1494,"mtime":1617772301738,"results":"90","hashOfConfig":"77"},{"size":1223,"mtime":1617735826295,"results":"91","hashOfConfig":"77"},{"size":105,"mtime":1617735826299,"results":"92","hashOfConfig":"77"},{"size":1433,"mtime":1617735826300,"results":"93","hashOfConfig":"77"},{"size":110,"mtime":1617735826297,"results":"94","hashOfConfig":"77"},{"size":3375,"mtime":1617858779647,"results":"95","hashOfConfig":"77"},{"size":1965,"mtime":1617735826305,"results":"96","hashOfConfig":"77"},{"size":1499,"mtime":1617735826334,"results":"97","hashOfConfig":"77"},{"size":403,"mtime":1617735826290,"results":"98","hashOfConfig":"77"},{"size":111,"mtime":1617735826290,"results":"99","hashOfConfig":"77"},{"size":1194,"mtime":1617772313064,"results":"100","hashOfConfig":"77"},{"size":120,"mtime":1617735826292,"results":"101","hashOfConfig":"77"},{"size":1589,"mtime":1617858742858,"results":"102","hashOfConfig":"77"},{"size":4655,"mtime":1617735826303,"results":"103","hashOfConfig":"77"},{"size":5758,"mtime":1617735826304,"results":"104","hashOfConfig":"77"},{"size":2244,"mtime":1617865295716,"results":"105","hashOfConfig":"77"},{"size":1830,"mtime":1617863961178,"results":"106","hashOfConfig":"77"},{"size":3114,"mtime":1617864315756,"results":"107","hashOfConfig":"77"},{"size":2527,"mtime":1617860682960,"results":"108","hashOfConfig":"77"},{"size":1538,"mtime":1617864661407,"results":"109","hashOfConfig":"77"},{"size":1356,"mtime":1617861229804,"results":"110","hashOfConfig":"77"},{"size":3551,"mtime":1617859688194,"results":"111","hashOfConfig":"77"},{"size":2264,"mtime":1617859699654,"results":"112","hashOfConfig":"77"},{"size":1745,"mtime":1617859706929,"results":"113","hashOfConfig":"77"},{"size":3112,"mtime":1617859694006,"results":"114","hashOfConfig":"77"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"a5dc5h",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"117"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"pcylpc",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"160"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"L:\\practicas\\proyects\\taskapp\\cliente\\src\\index.js",[],["241","242"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\App.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoState.js",["243"],"import React, { useReducer } from 'react'\r\n//importo el context y el reducer\r\nimport ProyectoContext from './proyectoContext';\r\nimport ProyectoReducer from './proyectoReducer';\r\n//importo mis types\r\nimport {\r\n        MOSTRAR_FORMULARIO,\r\n        MOSTRAR_PROYECTOS,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTIVO,\r\n        ELIMINAR_PROYECTO,\r\n        MOSTRAR_TERMINADOS,\r\n        TERMINAR_PROYECTO,\r\n        PROYECTO_ERROR\r\n        } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props =>{\r\n    const InitialState = {\r\n        panel: false,\r\n        panelproyecto: false,\r\n        proyectos: [],\r\n        errorformulario: false,\r\n        proyectoactivo: null,\r\n        panelterminados: false,\r\n        proyectosterminados: [],\r\n        mensaje: null,\r\n        badge: false,\r\n        badgeT: false\r\n    }\r\n  \r\n    const [ state, dispatch ]= useReducer(ProyectoReducer, InitialState);\r\n    //mis funciones\r\n    const showPanel = () =>{\r\n        dispatch({\r\n            type : MOSTRAR_FORMULARIO\r\n        })\r\n     }\r\n     //mostarar el componente de proyectos\r\n     const mostrarPanel = () =>{\r\n         dispatch({\r\n             type: MOSTRAR_PROYECTOS\r\n         })\r\n     }\r\n     const mostrarTerminados = ()=> {\r\n        dispatch({\r\n        type: MOSTRAR_TERMINADOS\r\n        })\r\n\r\n    }\r\n     //obtener los proyectos\r\n     const obtenerProyectos = async() =>{\r\n      try {\r\n        const requestP = await clienteAxios.get('/api/proyect');\r\n        //console.log(requestP.data);\r\n        dispatch({\r\n            type :OBTENER_PROYECTOS,\r\n            payload: requestP.data\r\n         });\r\n\r\n      } catch (error) {\r\n        const alerta = {\r\n            msg:  error.response.data.msg,\r\n            categoria: 'alerta-error'\r\n        }\r\n        dispatch({\r\n            type: PROYECTO_ERROR,\r\n            payload: alerta\r\n        })\r\n      }\r\n     }\r\n     //Agrega Proyectos\r\n     const agregarProyecto = async proyect =>{      \r\n        try {\r\n            const requestP = await clienteAxios.post('/api/proyect', proyect)\r\n            // //console.log(requestP.data.proyect);\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                 payload: requestP.data.proyect\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg:  error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n     }\r\n     //Valido el formulario\r\n     const validarFormulario = () =>{\r\n         dispatch({\r\n             type: VALIDAR_FORMULARIO\r\n         })\r\n     }\r\n     //Seleccionar y poner un proyecto como activo\r\n     const proyectoActual = proyecto =>{        \r\n         dispatch({\r\n             type: PROYECTO_ACTIVO,\r\n             payload: proyecto\r\n         });\r\n     }\r\n     //Eliminar las tareas\r\n    const eliminarProyecto = async proyectoID => {\r\n    //    //console.log (proyectoID)\r\n       try {\r\n        await clienteAxios.delete(`/api/proyect/${proyectoID}`);\r\n        dispatch({\r\n            type: ELIMINAR_PROYECTO,\r\n            payload: proyectoID\r\n         });\r\n       } catch (error) {           \r\n        //    //console.log(error.response.data.msg);\r\n           const alerta = {\r\n               msg:  error.response.data.msg,\r\n               categoria: 'alerta-error dash'\r\n           }\r\n           dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n       }\r\n     }    \r\n    const terminarProyecto = async proyecto => {\r\n        //console.log(proyecto)\r\n       try {\r\n        const consulta = await clienteAxios.put(`/api/proyect/${proyecto._id}`, proyecto);\r\n        //console.log(consulta)\r\n        dispatch({\r\n            type: TERMINAR_PROYECTO,\r\n            payload: proyecto\r\n        });\r\n       } catch (error) {\r\n           //console.log(error.response);\r\n       }\r\n        \r\n    }\r\n            \r\n    return(\r\n        <ProyectoContext.Provider\r\n            value={{\r\n                //valores del state o las funciones a compartir con el arbol de componentes\r\n                panel: state.panel,\r\n                panelproyecto: state.panelproyecto,\r\n                proyectos: state.proyectos,\r\n                errorformulario: state.errorformulario,\r\n                proyectoactivo : state.proyectoactivo,\r\n                panelterminados : state.panelterminados,\r\n                proyectosterminados: state.proyectosterminados,\r\n                mensaje: state.mensaje,\r\n                badge:state.badge,\r\n                badgeT:state.badgeT,\r\n                mostrarPanel,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                showPanel,\r\n                validarFormulario,\r\n                proyectoActual,\r\n                eliminarProyecto,\r\n                mostrarTerminados,\r\n                terminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ProyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoReducer.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\types\\index.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskState.js",["244","245"],"import React, {useReducer} from 'react';\r\n//import el context y el reducer\r\nimport TaskContext from './taskContext';\r\nimport taskReducer from './taskReducer';\r\n//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TaskState = props => {\r\n    //state inicial\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaactual: null\r\n    }\r\n    const [ state, dispatch ] = useReducer(taskReducer, initialState);\r\n    //Funciones \r\n    //obtener las tareas relacionadas con el id del proyecto\r\n    const obtenerTareas = async proyecto => {\r\n       try {\r\n           const peticion = await clienteAxios.get('/api/task', {params: {proyecto}});\r\n        //    //console.log(peticion.data)\r\n        dispatch({\r\n            type: TASK_PROYECTO,\r\n            payload: peticion.data\r\n        });\r\n       } catch (error) {\r\n           //console.log(error);\r\n       }\r\n      \r\n    }\r\n    //Agregar nueva tarea\r\n    const agregarTarea = async tarea => {\r\n        try {\r\n        const consulta = await clienteAxios.post('/api/task', tarea);\r\n        \r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: tarea\r\n        });\r\n       } catch (error) {\r\n           \r\n       }        \r\n    }\r\n    //validar la tarea\r\n    const validarTarea = ()=> {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //eliminar tarea\r\n    const eliminarTarea = async (id, proyecto) => {            \r\n        try {\r\n            await clienteAxios.delete(`/api/task/${id}`, {params: {proyecto}});            \r\n            dispatch({\r\n                type: DELETE_TASK,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            //console.log(error);\r\n        }\r\n    }\r\n    //editar la tarea\r\n    const actualizarTask = async tarea => {\r\n        // //console.log(tarea)\r\n        try {\r\n            const requestcambio = await clienteAxios.put(`/api/task/${tarea._id}`, tarea);\r\n            //console.log(requestcambio.data.tarea)\r\n            dispatch({\r\n                type: ACTUALIZAR_TASK,\r\n                payload: requestcambio.data.tarea\r\n            });\r\n        } catch (error) {\r\n            //console.log(error)\r\n        }\r\n    }\r\n    const tareaActual = tarea => {      \r\n        dispatch({\r\n            type: TASK_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n    return (\r\n        <TaskContext.Provider\r\n            value = {{\r\n                //valores del state\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaactual: state.tareaactual,\r\n                counttask: state.counttask,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                tareaActual,\r\n                actualizarTask\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\nexport default TaskState;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskReducer.js",["246"],"//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case TASK_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            } \r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto:[action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case DELETE_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }       \r\n        case ACTUALIZAR_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map( tarea => (tarea._id === action.payload._id ?action.payload : tarea)),\r\n                tareaactual: null\r\n            }\r\n        case TASK_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaactual: action.payload\r\n            }       \r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaState.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaReducer.js",["247"],"//importo los types\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authState.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authReducer.js",["248"],"//importo los types\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    OBTENER_USUARIO,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch (action.type) {\r\n        case REGISTRO_EXITOSO:\r\n            case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false,\r\n                cargandoSpin: true\r\n        }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                autenticado: true,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false,\r\n                cargandoSpin: false\r\n        }\r\n        default:\r\n           return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\axios.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\tokenAuth.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\PrivateRoute.js",["249"],"import React, { useContext, useEffect } from 'react';\r\nimport {Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({component: Component, ...props}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { cargando, autenticado, userAuth } = authContext;\r\n    useEffect(()=>{\r\n        userAuth();\r\n    },[]);\r\n    return (\r\n        <Route {...props} render = {props => !autenticado && !cargando      \r\n            ?( <Redirect  to=\"/\"/>)\r\n            :( <Component  {...props} /> )\r\n        }\r\n\r\n        />\r\n     );\r\n}\r\n \r\nexport default PrivateRoute;\r\n","L:\\practicas\\githubclones\\TaskProyectView\\src\\index.js",[],["250","251"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\App.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\routes\\index.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\routes\\PrivateRoute.js",["252"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\config\\tokenAuth.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\index.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\config\\axios.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\index.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\auth\\authContext.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\auth\\authState.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\task\\taskState.js",["253","254"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\proyects\\proyectoState.js",["255"],"import React, { useReducer } from 'react'\r\n//importo el context y el reducer\r\nimport ProyectoContext from './proyectoContext';\r\nimport ProyectoReducer from './proyectoReducer';\r\n//importo mis types\r\nimport {\r\n        MOSTRAR_FORMULARIO,\r\n        MOSTRAR_PROYECTOS,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTIVO,\r\n        ELIMINAR_PROYECTO,\r\n        MOSTRAR_TERMINADOS,\r\n        TERMINAR_PROYECTO,\r\n        PROYECTO_ERROR,\r\n        PROYECTO_NULL\r\n        } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props =>{\r\n    const InitialState = {\r\n        panel: false,\r\n        panelproyecto: false,\r\n        proyectos: [],\r\n        errorformulario: false,\r\n        proyectoactivo: null,\r\n        panelterminados: false,\r\n        proyectosterminados: [],\r\n        mensaje: null,\r\n        badge: false,\r\n        badgeT: false\r\n    }\r\n  \r\n    const [ state, dispatch ]= useReducer(ProyectoReducer, InitialState);\r\n    //mis funciones\r\n    const showPanel = () =>{\r\n        dispatch({\r\n            type : MOSTRAR_FORMULARIO\r\n        })\r\n     }\r\n     //mostarar el componente de proyectos\r\n     const mostrarPanel = () =>{\r\n         dispatch({\r\n             type: MOSTRAR_PROYECTOS\r\n         })\r\n     }\r\n     const mostrarTerminados = ()=> {\r\n        dispatch({\r\n        type: MOSTRAR_TERMINADOS\r\n        })\r\n\r\n    }\r\n     //obtener los proyectos\r\n     const obtenerProyectos = async() =>{\r\n      try {\r\n        const requestP = await clienteAxios.get('/api/proyect');\r\n        //console.log(requestP.data);\r\n        dispatch({\r\n            type :OBTENER_PROYECTOS,\r\n            payload: requestP.data\r\n         });\r\n\r\n      } catch (error) {\r\n        const alerta = {\r\n            msg:  error.response.data.msg,\r\n            categoria: 'alerta-error'\r\n        }\r\n        dispatch({\r\n            type: PROYECTO_ERROR,\r\n            payload: alerta\r\n        })\r\n      }\r\n     }\r\n     //Agrega Proyectos\r\n     const agregarProyecto = async proyect =>{      \r\n        try {\r\n            const requestP = await clienteAxios.post('/api/proyect', proyect)\r\n            // //console.log(requestP.data.proyect);\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                 payload: requestP.data.proyect\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg:  error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n     }\r\n     //Valido el formulario\r\n     const validarFormulario = () =>{\r\n         dispatch({\r\n             type: VALIDAR_FORMULARIO\r\n         })\r\n     }\r\n     //Seleccionar y poner un proyecto como activo\r\n     const proyectoActual = proyecto =>{        \r\n         dispatch({\r\n             type: PROYECTO_ACTIVO,\r\n             payload: proyecto\r\n         });\r\n     }\r\n     //Eliminar las tareas\r\n    const eliminarProyecto = async proyectoID => {\r\n    //    //console.log (proyectoID)\r\n       try {\r\n        await clienteAxios.delete(`/api/proyect/${proyectoID}`);\r\n        dispatch({\r\n            type: ELIMINAR_PROYECTO,\r\n            payload: proyectoID\r\n         });\r\n       } catch (error) {           \r\n        //    //console.log(error.response.data.msg);\r\n           const alerta = {\r\n               msg:  error.response.data.msg,\r\n               categoria: 'alerta-error dash'\r\n           }\r\n           dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n       }\r\n     }    \r\n    const terminarProyecto = async proyecto => {\r\n        //console.log(proyecto)\r\n       try {\r\n        const consulta = await clienteAxios.put(`/api/proyect/${proyecto._id}`, proyecto);\r\n        //console.log(consulta)\r\n        dispatch({\r\n            type: TERMINAR_PROYECTO,\r\n            payload: proyecto\r\n        });\r\n       } catch (error) {\r\n           //console.log(error.response);\r\n       }\r\n        \r\n    }\r\n   \r\n    const proyectoNull = () =>{\r\n        dispatch({\r\n            type: PROYECTO_NULL\r\n        })\r\n    }\r\n    return(\r\n        <ProyectoContext.Provider\r\n            value={{\r\n                //valores del state o las funciones a compartir con el arbol de componentes\r\n                panel: state.panel,\r\n                panelproyecto: state.panelproyecto,\r\n                proyectos: state.proyectos,\r\n                errorformulario: state.errorformulario,\r\n                proyectoactivo : state.proyectoactivo,\r\n                panelterminados : state.panelterminados,\r\n                proyectosterminados: state.proyectosterminados,\r\n                mensaje: state.mensaje,\r\n                badge:state.badge,\r\n                badgeT:state.badgeT,\r\n                mostrarPanel,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                showPanel,\r\n                validarFormulario,\r\n                proyectoActual,\r\n                eliminarProyecto,\r\n                mostrarTerminados,\r\n                terminarProyecto,\r\n                proyectoNull\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ProyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\alertas\\alertaState.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\animations\\AnimationState.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\auth\\authReducer.js",["256"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\task\\taskContext.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\task\\taskReducer.js",["257"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\proyects\\proyectoContext.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\proyects\\proyectoReducer.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Auth\\index.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\index.jsx",["258","259","260"],"import React, { useContext, useEffect } from \"react\";\r\nimport SideBar from \"./auxiliars/SideBar\";\r\nimport Container from \"./auxiliars/Container\";\r\nimport ProyectoContext from \"../../context/proyects/proyectoContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport \"./index.scss\";\r\nimport FormTask from \"./auxiliars/task/FormTask\";\r\nimport AnimationContext from \"../../context/animations/AnimationContext\";\r\n\r\nconst DashboardPage = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { proyectoactivo, mensaje, proyectoActual } = proyectoContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { userAuth } = authContext;\r\n\r\n  const alertacontext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertacontext;\r\n\r\n  const animationContext = useContext(AnimationContext);\r\n  const {\r\n    panelnuevoproyecto,\r\n    panelproyectos,\r\n    panelterminados,\r\n  } = animationContext;\r\n\r\n  useEffect(() => {\r\n    userAuth();\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    if (panelnuevoproyecto || panelproyectos || panelterminados) {\r\n      proyectoActual(null);\r\n    }\r\n  }, [mensaje]);\r\n  return (\r\n    <>\r\n      <div className=\"Dashboard\">\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <SideBar />\r\n        <Container />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\alertas\\alertaReducer.js",["261"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\alertas\\alertaContext.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\animations\\AnimationReducer.jsx",["262"],"//importar types\r\nimport {\r\n  PANELAUTH,\r\n  PANELNUEVO,\r\n  PANELPROYECTOS,\r\n  PANELTERMIANDOS,  \r\n  TODO_FALSE\r\n} from '../../types';\r\nexport default ( state, action ) => {\r\n    switch (action.type) {\r\n      case PANELAUTH:\r\n          return{\r\n           panel: !state.panel,\r\n           panelnuevoproyecto: false,\r\n           panelproyectos: false,\r\n           panelterminados: false\r\n          }\r\n      case PANELNUEVO:\r\n        return{\r\n          panelnuevoproyecto: !state.panelnuevoproyecto,\r\n          panelproyectos: false,\r\n          panelterminados: false\r\n        }\r\n      case PANELPROYECTOS:\r\n        return{\r\n          panelnuevoproyecto: false,\r\n          panelproyectos: !state.panelproyectos,\r\n          panelterminados: false\r\n\r\n        }\r\n      case PANELTERMIANDOS:\r\n        return{\r\n          panelnuevoproyecto:false,\r\n          panelproyectos: false,\r\n          panelterminados: !state.panelterminados\r\n        }        \r\n        case TODO_FALSE:\r\n          return{\r\n            panel: false,\r\n            panelnuevoproyecto: false,\r\n            panelproyectos: false,\r\n            panelterminados: false\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n}","L:\\practicas\\githubclones\\TaskProyectView\\src\\context\\animations\\AnimationContext.jsx",["263"],"import React, {createContext} from 'react';\r\nconst AnimationContext = createContext();\r\nexport default AnimationContext;","L:\\practicas\\githubclones\\TaskProyectView\\src\\types\\index.js",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Auth\\Login\\index.jsx",["264","265","266"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\nimport AnimationContext from \"../../../context/animations/AnimationContext\";\r\n\r\nconst FormularioContainer = styled.form`\r\n  width: 100%;\r\n  height: fit-content;\r\n  border-radius: 50px;\r\n  background-color: #fff;\r\n  box-shadow: -20px 20px 60px #bebebe, 20px -20px 60px #ffffff;\r\n  padding: 1rem;\r\n  z-index: 1;\r\n  margin: 1rem;\r\n  transform: ${(props) => props.position};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    //border: 1px solid red;\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  /* padding-right: 15%;\r\n  */\r\n\r\n  h3 {\r\n    font-size: 1.3rem;\r\n  }\r\n  p {\r\n    font-size: 0.7rem;\r\n    padding: 0.5rem 0;\r\n  }\r\n`;\r\n\r\nconst Titulo = styled.h2`\r\n  font-size: 2.2rem;\r\n  color: #444;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  max-width: 380px;\r\n  width: 100%;\r\n  height: 55px;\r\n  background-color: #f0f0f0;\r\n  margin: 10px 0;\r\n  border-radius: 50px;\r\n  display: grid;\r\n  grid-template-columns: 15% 85%;\r\n  padding: 0 0.4rem;\r\n  outline: none;\r\n  svg {\r\n    justify-self: center;\r\n    align-self: center;\r\n    color: #444;\r\n    font-size: 1.1rem;\r\n  }\r\n  input {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    line-height: 1;\r\n    font-weight: 600;\r\n    font-size: 1.1rem;\r\n    color: #333;\r\n\r\n    &::focus svg {\r\n      background-color: #f02d7b;\r\n    }\r\n    &::placeholder {\r\n      font-weight: 500;\r\n      color: #aaa;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.input`\r\n  width: 150px;\r\n  height: 50px;\r\n  border-radius: 55px;\r\n  border: none;\r\n  outline: none;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  margin: 10px 0;\r\n  transition: 0.5s;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  background-color: #f02d7b;\r\n  &:hover {\r\n    background-color: #cc0f5b;\r\n  }\r\n`;\r\nconst ButtonSec = styled(Button)`\r\n  margin: 0;\r\n  background: none;\r\n  border: 2px solid #f02d7b;\r\n  width: 130px;\r\n  height: 41px;\r\n  font-weight: 600;\r\n  font-size: 0.8rem;\r\n  color: #f02d7b;\r\n  text-align: center;\r\n  &:hover{\r\n    color: white;\r\n  }\r\n`;\r\nconst Login = (props) => {\r\n  const animaContext = useContext(AnimationContext);\r\n  const { panel, movePanelAuth } = animaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, cargandoSpin, loginUser } = authContext;\r\n\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = user;\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //valido que no tenga campos vacios\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son necesarios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    loginUser(user);\r\n  };\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      history.push(\"/dashboard\");\r\n      if (mensaje) {\r\n        mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n      }\r\n    }\r\n  }, [mensaje, autenticado, props.history]);\r\n\r\n  return (\r\n    <>\r\n      <FormularioContainer onSubmit={handleSubmit}>\r\n        <Titulo>Iniciar Sesion</Titulo>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <InputField>\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario o Email\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </InputField>\r\n        <Button type=\"submit\" value=\"Entrar\" />\r\n      </FormularioContainer>\r\n      <Content>\r\n        <h3>¿Nuevo aqui?</h3>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n        <ButtonSec\r\n          onClick={() => movePanelAuth()}\r\n          id=\"sing-up-btn\"\r\n          value=\"Registrarse\"\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Auth\\Signin\\index.jsx",["267","268","269"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserAlt, FaLock, FaEnvelope } from \"react-icons/fa\";\r\nimport styled from \"@emotion/styled\";\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\nimport AnimationContext from \"../../../context/animations/AnimationContext\";\r\n\r\nconst FormularioContainer = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  border-radius: 50px;\r\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  transform: ${(props) => props.position};\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    /* width: 30%; */\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  /* padding-right: 15%;\r\n  */\r\n\r\n  h3 {\r\n    font-size: 1.3rem;\r\n  }\r\n  p {\r\n    font-size: 0.7rem;\r\n    padding: 0.5rem 0;\r\n  }\r\n`;\r\n\r\nconst Titulo = styled.h2`\r\n  font-size: 2.2rem;\r\n  color: #444;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst InputField = styled.div`\r\n  max-width: 380px;\r\n  width: 100%;\r\n  height: 55px;\r\n  background-color: #f0f0f0;\r\n  margin: 10px 0;\r\n  border-radius: 50px;\r\n  display: grid;\r\n  grid-template-columns: 15% 85%;\r\n  padding: 0 0.4rem;\r\n  outline: none;\r\n  svg {\r\n    justify-self: center;\r\n    align-self: center;\r\n    color: #444;\r\n    font-size: 1.1rem;\r\n  }\r\n  input {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n    line-height: 1;\r\n    font-weight: 600;\r\n    font-size: 1.1rem;\r\n    color: #333;\r\n\r\n    &::focus svg {\r\n      background-color: #f02d7b;\r\n    }\r\n    &::placeholder {\r\n      font-weight: 500;\r\n      color: #aaa;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.input`\r\n  width: 150px;\r\n  height: 50px;\r\n  border-radius: 55px;\r\n  border: none;\r\n  outline: none;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  margin: 10px 0;\r\n  transition: 0.5s;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  background-color: #f02d7b;\r\n  &:hover {\r\n    background-color: #cc0f5b;\r\n  }\r\n`;\r\n\r\nconst ButtonSec = styled(Button)`\r\n  margin: 0;\r\n  background: none;\r\n  border: 2px solid #f02d7b;\r\n  width: 130px;\r\n  height: 41px;\r\n  font-weight: 600;\r\n  font-size: 0.8rem;\r\n  color: #f02d7b;\r\n  text-align: center;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\nconst SignIn = (props) => {\r\n  const animaContext = useContext(AnimationContext);\r\n  const { panel, movePanelAuth } = animaContext;\r\n  //contexts\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, cargandoSpin, registerUser } = authContext;\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 2000);\r\n    }\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n  }, [autenticado, mensaje, props.history]);\r\n  const [usern, setUserN] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n  const { nombre, email, password, confirmar } = usern;\r\n  const handleChange = (e) => {\r\n    setUserN({\r\n      ...usern,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //pasword minimo de 6 caracteres\r\n    if (password.length < 6) {\r\n      mostrarAlerta(\r\n        \"el password debe ser de al menos 6 caracteres\",\r\n        \"alerta-error\"\r\n      );\r\n      return;\r\n    }\r\n    //los dos passwords iguales\r\n    if (password.trim() !== confirmar.trim()) {\r\n      mostrarAlerta(\"Los passwords deben ser iguales\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //pasarlo al action\r\n    registerUser({\r\n      nombre,\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormularioContainer onSubmit={handleSubmit}>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <Titulo>Obtener una Cuenta</Titulo>\r\n        <InputField>\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaEnvelope />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmar\"\r\n            value={confirmar}\r\n            onChange={handleChange}\r\n            placeholder=\"Repetir Contraseña\"\r\n          />\r\n        </InputField>\r\n        <Button type=\"submit\" value=\"Continuar\" />\r\n      </FormularioContainer>\r\n      <Content>\r\n        <h3>¿Ya tienes una cuenta?</h3>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n        <ButtonSec onClick={() => movePanelAuth()} value=\" Registrarse\" />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\SideBar\\index.jsx",["270","271","272","273","274","275","276","277"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\Container\\index.jsx",["278","279"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\NewProyect.jsx",["280"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\ProyectList.jsx",["281"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\EndProyects.jsx",["282"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\proyects\\Proyect.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\FormTask.jsx",["283"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\TaskBody.jsx",["284","285","286","287","288"],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\TaskList.jsx",[],"L:\\practicas\\githubclones\\TaskProyectView\\src\\pages\\Dashboard\\auxiliars\\task\\Task.jsx",["289"],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":131,"column":15,"nodeType":"296","messageId":"297","endLine":131,"endColumn":23},{"ruleId":"294","severity":1,"message":"298","line":11,"column":5,"nodeType":"296","messageId":"297","endLine":11,"endColumn":15},{"ruleId":"294","severity":1,"message":"295","line":43,"column":15,"nodeType":"296","messageId":"297","endLine":43,"endColumn":23},{"ruleId":"294","severity":1,"message":"298","line":7,"column":5,"nodeType":"296","messageId":"297","endLine":7,"endColumn":15},{"ruleId":"299","severity":1,"message":"300","line":4,"column":1,"nodeType":"301","endLine":17,"endColumn":2},{"ruleId":"299","severity":1,"message":"300","line":11,"column":1,"nodeType":"301","endLine":46,"endColumn":2},{"ruleId":"302","severity":1,"message":"303","line":10,"column":7,"nodeType":"304","endLine":10,"endColumn":9,"suggestions":"305"},{"ruleId":"290","replacedBy":"306"},{"ruleId":"292","replacedBy":"307"},{"ruleId":"302","severity":1,"message":"303","line":10,"column":7,"nodeType":"304","endLine":10,"endColumn":9,"suggestions":"308"},{"ruleId":"294","severity":1,"message":"298","line":11,"column":5,"nodeType":"296","messageId":"297","endLine":11,"endColumn":15},{"ruleId":"294","severity":1,"message":"295","line":43,"column":15,"nodeType":"296","messageId":"297","endLine":43,"endColumn":23},{"ruleId":"294","severity":1,"message":"295","line":132,"column":15,"nodeType":"296","messageId":"297","endLine":132,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":11,"column":1,"nodeType":"301","endLine":46,"endColumn":2},{"ruleId":"294","severity":1,"message":"298","line":7,"column":5,"nodeType":"296","messageId":"297","endLine":7,"endColumn":15},{"ruleId":"294","severity":1,"message":"309","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":16},{"ruleId":"294","severity":1,"message":"310","line":13,"column":11,"nodeType":"296","messageId":"297","endLine":13,"endColumn":25},{"ruleId":"302","severity":1,"message":"311","line":36,"column":6,"nodeType":"304","endLine":36,"endColumn":15,"suggestions":"312"},{"ruleId":"299","severity":1,"message":"300","line":4,"column":1,"nodeType":"301","endLine":17,"endColumn":2},{"ruleId":"299","severity":1,"message":"300","line":9,"column":1,"nodeType":"301","endLine":47,"endColumn":2},{"ruleId":"294","severity":1,"message":"313","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"314","line":115,"column":11,"nodeType":"296","messageId":"297","endLine":115,"endColumn":16},{"ruleId":"294","severity":1,"message":"315","line":118,"column":33,"nodeType":"296","messageId":"297","endLine":118,"endColumn":45},{"ruleId":"302","severity":1,"message":"316","line":150,"column":6,"nodeType":"304","endLine":150,"endColumn":43,"suggestions":"317"},{"ruleId":"294","severity":1,"message":"314","line":116,"column":11,"nodeType":"296","messageId":"297","endLine":116,"endColumn":16},{"ruleId":"294","severity":1,"message":"315","line":122,"column":33,"nodeType":"296","messageId":"297","endLine":122,"endColumn":45},{"ruleId":"302","severity":1,"message":"316","line":133,"column":6,"nodeType":"304","endLine":133,"endColumn":43,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"319","line":1,"column":29,"nodeType":"296","messageId":"297","endLine":1,"endColumn":37},{"ruleId":"294","severity":1,"message":"320","line":7,"column":7,"nodeType":"296","messageId":"297","endLine":7,"endColumn":23},{"ruleId":"294","severity":1,"message":"321","line":8,"column":7,"nodeType":"296","messageId":"297","endLine":8,"endColumn":19},{"ruleId":"294","severity":1,"message":"322","line":9,"column":7,"nodeType":"296","messageId":"297","endLine":9,"endColumn":12},{"ruleId":"294","severity":1,"message":"323","line":10,"column":7,"nodeType":"296","messageId":"297","endLine":10,"endColumn":11},{"ruleId":"294","severity":1,"message":"324","line":11,"column":7,"nodeType":"296","messageId":"297","endLine":11,"endColumn":29},{"ruleId":"294","severity":1,"message":"325","line":12,"column":7,"nodeType":"296","messageId":"297","endLine":12,"endColumn":13},{"ruleId":"294","severity":1,"message":"326","line":13,"column":7,"nodeType":"296","messageId":"297","endLine":13,"endColumn":22},{"ruleId":"294","severity":1,"message":"327","line":44,"column":27,"nodeType":"296","messageId":"297","endLine":44,"endColumn":41},{"ruleId":"302","severity":1,"message":"328","line":50,"column":6,"nodeType":"304","endLine":50,"endColumn":75,"suggestions":"329"},{"ruleId":"294","severity":1,"message":"314","line":70,"column":5,"nodeType":"296","messageId":"297","endLine":70,"endColumn":10},{"ruleId":"302","severity":1,"message":"330","line":74,"column":6,"nodeType":"304","endLine":74,"endColumn":8,"suggestions":"331"},{"ruleId":"294","severity":1,"message":"332","line":22,"column":5,"nodeType":"296","messageId":"297","endLine":22,"endColumn":20},{"ruleId":"294","severity":1,"message":"333","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"334","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":19},{"ruleId":"294","severity":1,"message":"314","line":43,"column":5,"nodeType":"296","messageId":"297","endLine":43,"endColumn":10},{"ruleId":"294","severity":1,"message":"335","line":44,"column":5,"nodeType":"296","messageId":"297","endLine":44,"endColumn":18},{"ruleId":"294","severity":1,"message":"332","line":45,"column":5,"nodeType":"296","messageId":"297","endLine":45,"endColumn":20},{"ruleId":"294","severity":1,"message":"336","line":49,"column":5,"nodeType":"296","messageId":"297","endLine":49,"endColumn":17},{"ruleId":"302","severity":1,"message":"337","line":69,"column":6,"nodeType":"304","endLine":69,"endColumn":8,"suggestions":"338"},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'consulta' is assigned a value but never used.","Identifier","unusedVar","'TASK_STATE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userAuth'. Either include it or remove the dependency array.","ArrayExpression",["341"],["339"],["340"],["342"],"'FormTask' is defined but never used.","'proyectoactivo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mostrarAlerta', 'panelnuevoproyecto', 'panelproyectos', 'panelterminados', 'proyectoActual', and 'userAuth'. Either include them or remove the dependency array.",["343"],"'React' is defined but never used.","'panel' is assigned a value but never used.","'cargandoSpin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'mostrarAlerta'. Either include them or remove the dependency array.",["344"],["345"],"'useState' is defined but never used.","'SideBarContainer' is assigned a value but never used.","'SideBarDatos' is assigned a value but never used.","'Brand' is assigned a value but never used.","'Name' is assigned a value but never used.","'SidebarButtonContainer' is assigned a value but never used.","'Button' is assigned a value but never used.","'EndSesionButton' is assigned a value but never used.","'proyectoActual' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allFalse'. Either include it or remove the dependency array.",["346"],"React Hook useEffect has a missing dependency: 'obtenerProyectos'. Either include it or remove the dependency array.",["347"],"'panelterminados' is assigned a value but never used.","'Fragment' is defined but never used.","'ProyectList' is defined but never used.","'panelproyecto' is assigned a value but never used.","'proyectoNull' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'obtenerTareas' and 'proyectoActual._id'. Either include them or remove the dependency array.",["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"349","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [userAuth]",{"range":"364","text":"365"},{"range":"366","text":"365"},"Update the dependencies array to be: [mensaje, mostrarAlerta, panelnuevoproyecto, panelproyectos, panelterminados, proyectoActual, userAuth]",{"range":"367","text":"368"},"Update the dependencies array to be: [mensaje, autenticado, props.history, history, mostrarAlerta]",{"range":"369","text":"370"},"Update the dependencies array to be: [autenticado, history, mensaje, mostrarAlerta, props.history]",{"range":"371","text":"372"},"Update the dependencies array to be: [proyectoactivo, panelnuevoproyecto, panelproyectos, panelterminados, allFalse]",{"range":"373","text":"374"},"Update the dependencies array to be: [obtenerProyectos]",{"range":"375","text":"376"},"Update the dependencies array to be: [obtenerTareas, proyectoActual._id]",{"range":"377","text":"378"},[387,389],"[userAuth]",[387,389],[1241,1250],"[mensaje, mostrarAlerta, panelnuevoproyecto, panelproyectos, panelterminados, proyectoActual, userAuth]",[3484,3521],"[mensaje, autenticado, props.history, history, mostrarAlerta]",[3020,3057],"[autenticado, history, mensaje, mostrarAlerta, props.history]",[1488,1557],"[proyectoactivo, panelnuevoproyecto, panelproyectos, panelterminados, allFalse]",[1937,1939],"[obtenerProyectos]",[1757,1759],"[obtenerTareas, proyectoActual._id]"]