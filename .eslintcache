[{"L:\\practicas\\proyects\\taskapp\\cliente\\src\\index.js":"1","L:\\practicas\\proyects\\taskapp\\cliente\\src\\App.js":"2","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoContext.js":"3","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoState.js":"4","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoReducer.js":"5","L:\\practicas\\proyects\\taskapp\\cliente\\src\\types\\index.js":"6","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskState.js":"7","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskContext.js":"8","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskReducer.js":"9","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaState.js":"10","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaContext.js":"11","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaReducer.js":"12","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authState.js":"13","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authContext.js":"14","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authReducer.js":"15","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\axios.js":"16","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\tokenAuth.js":"17","L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\PrivateRoute.js":"18","L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\index.jsx":"19","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\index.jsx":"20","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\index.jsx":"21","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Login\\index.jsx":"22","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Signin\\index.jsx":"23","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\index.jsx":"24","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationState.jsx":"25","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationContext.jsx":"26","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationReducer.jsx":"27","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\index.jsx":"28","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\TaskBody.js":"29","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\FormTask.js":"30","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\TaskList.js":"31","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\Task.js":"32","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\SideBar\\index.jsx":"33","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\Container\\index.jsx":"34","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\ProyectList.jsx":"35","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\Proyect.jsx":"36","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\NewProyect.jsx":"37","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\EndProyects.jsx":"38"},{"size":251,"mtime":1615517947782,"results":"39","hashOfConfig":"40"},{"size":135,"mtime":1615505479454,"results":"41","hashOfConfig":"40"},{"size":110,"mtime":1611726567576,"results":"42","hashOfConfig":"40"},{"size":5149,"mtime":1615918682387,"results":"43","hashOfConfig":"40"},{"size":3243,"mtime":1613797795009,"results":"44","hashOfConfig":"40"},{"size":1499,"mtime":1616769337981,"results":"45","hashOfConfig":"40"},{"size":3163,"mtime":1613878458729,"results":"46","hashOfConfig":"40"},{"size":105,"mtime":1612239337757,"results":"47","hashOfConfig":"40"},{"size":1433,"mtime":1613800492482,"results":"48","hashOfConfig":"40"},{"size":1087,"mtime":1613516172440,"results":"49","hashOfConfig":"40"},{"size":111,"mtime":1613371219829,"results":"50","hashOfConfig":"40"},{"size":403,"mtime":1613514197880,"results":"51","hashOfConfig":"40"},{"size":3801,"mtime":1615752537667,"results":"52","hashOfConfig":"40"},{"size":105,"mtime":1613517890339,"results":"53","hashOfConfig":"40"},{"size":1223,"mtime":1613880291126,"results":"54","hashOfConfig":"40"},{"size":144,"mtime":1613892765094,"results":"55","hashOfConfig":"40"},{"size":271,"mtime":1613538990777,"results":"56","hashOfConfig":"40"},{"size":636,"mtime":1615700351418,"results":"57","hashOfConfig":"40"},{"size":1169,"mtime":1615838494762,"results":"58","hashOfConfig":"40"},{"size":100,"mtime":1615833314414,"results":"59","hashOfConfig":"40"},{"size":1740,"mtime":1615827115512,"results":"60","hashOfConfig":"40"},{"size":2277,"mtime":1615790215501,"results":"61","hashOfConfig":"40"},{"size":3466,"mtime":1615837754184,"results":"62","hashOfConfig":"40"},{"size":323,"mtime":1615695384224,"results":"63","hashOfConfig":"40"},{"size":1379,"mtime":1616769699576,"results":"64","hashOfConfig":"40"},{"size":120,"mtime":1615693042836,"results":"65","hashOfConfig":"40"},{"size":980,"mtime":1616818979604,"results":"66","hashOfConfig":"40"},{"size":1499,"mtime":1616825544723,"results":"67","hashOfConfig":"40"},{"size":1892,"mtime":1616823783328,"results":"68","hashOfConfig":"40"},{"size":2748,"mtime":1616823749629,"results":"69","hashOfConfig":"40"},{"size":1185,"mtime":1615837922312,"results":"70","hashOfConfig":"40"},{"size":2410,"mtime":1615837920978,"results":"71","hashOfConfig":"40"},{"size":2378,"mtime":1616826082215,"results":"72","hashOfConfig":"40"},{"size":789,"mtime":1616826272801,"results":"73","hashOfConfig":"40"},{"size":1181,"mtime":1616819069264,"results":"74","hashOfConfig":"40"},{"size":919,"mtime":1616822932758,"results":"75","hashOfConfig":"40"},{"size":1838,"mtime":1616048494703,"results":"76","hashOfConfig":"40"},{"size":1311,"mtime":1616048488218,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"cpe98q",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"80"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"80"},"L:\\practicas\\proyects\\taskapp\\cliente\\src\\index.js",[],["173","174"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\App.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoState.js",["175"],"import React, { useReducer } from 'react'\r\n//importo el context y el reducer\r\nimport ProyectoContext from './proyectoContext';\r\nimport ProyectoReducer from './proyectoReducer';\r\n//importo mis types\r\nimport {\r\n        MOSTRAR_FORMULARIO,\r\n        MOSTRAR_PROYECTOS,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTIVO,\r\n        ELIMINAR_PROYECTO,\r\n        MOSTRAR_TERMINADOS,\r\n        TERMINAR_PROYECTO,\r\n        PROYECTO_ERROR\r\n        } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props =>{\r\n    const InitialState = {\r\n        panel: false,\r\n        panelproyecto: false,\r\n        proyectos: [],\r\n        errorformulario: false,\r\n        proyectoactivo: null,\r\n        panelterminados: false,\r\n        proyectosterminados: [],\r\n        mensaje: null,\r\n        badge: false,\r\n        badgeT: false\r\n    }\r\n  \r\n    const [ state, dispatch ]= useReducer(ProyectoReducer, InitialState);\r\n    //mis funciones\r\n    const showPanel = () =>{\r\n        dispatch({\r\n            type : MOSTRAR_FORMULARIO\r\n        })\r\n     }\r\n     //mostarar el componente de proyectos\r\n     const mostrarPanel = () =>{\r\n         dispatch({\r\n             type: MOSTRAR_PROYECTOS\r\n         })\r\n     }\r\n     const mostrarTerminados = ()=> {\r\n        dispatch({\r\n        type: MOSTRAR_TERMINADOS\r\n        })\r\n\r\n    }\r\n     //obtener los proyectos\r\n     const obtenerProyectos = async() =>{\r\n      try {\r\n        const requestP = await clienteAxios.get('/api/proyect');\r\n        //console.log(requestP.data);\r\n        dispatch({\r\n            type :OBTENER_PROYECTOS,\r\n            payload: requestP.data\r\n         });\r\n\r\n      } catch (error) {\r\n        const alerta = {\r\n            msg:  error.response.data.msg,\r\n            categoria: 'alerta-error'\r\n        }\r\n        dispatch({\r\n            type: PROYECTO_ERROR,\r\n            payload: alerta\r\n        })\r\n      }\r\n     }\r\n     //Agrega Proyectos\r\n     const agregarProyecto = async proyect =>{      \r\n        try {\r\n            const requestP = await clienteAxios.post('/api/proyect', proyect)\r\n            // //console.log(requestP.data.proyect);\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                 payload: requestP.data.proyect\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg:  error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n     }\r\n     //Valido el formulario\r\n     const validarFormulario = () =>{\r\n         dispatch({\r\n             type: VALIDAR_FORMULARIO\r\n         })\r\n     }\r\n     //Seleccionar y poner un proyecto como activo\r\n     const proyectoActual = proyecto =>{        \r\n         dispatch({\r\n             type: PROYECTO_ACTIVO,\r\n             payload: proyecto\r\n         });\r\n     }\r\n     //Eliminar las tareas\r\n    const eliminarProyecto = async proyectoID => {\r\n    //    //console.log (proyectoID)\r\n       try {\r\n        await clienteAxios.delete(`/api/proyect/${proyectoID}`);\r\n        dispatch({\r\n            type: ELIMINAR_PROYECTO,\r\n            payload: proyectoID\r\n         });\r\n       } catch (error) {           \r\n        //    //console.log(error.response.data.msg);\r\n           const alerta = {\r\n               msg:  error.response.data.msg,\r\n               categoria: 'alerta-error dash'\r\n           }\r\n           dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n       }\r\n     }    \r\n    const terminarProyecto = async proyecto => {\r\n        //console.log(proyecto)\r\n       try {\r\n        const consulta = await clienteAxios.put(`/api/proyect/${proyecto._id}`, proyecto);\r\n        //console.log(consulta)\r\n        dispatch({\r\n            type: TERMINAR_PROYECTO,\r\n            payload: proyecto\r\n        });\r\n       } catch (error) {\r\n           //console.log(error.response);\r\n       }\r\n        \r\n    }\r\n            \r\n    return(\r\n        <ProyectoContext.Provider\r\n            value={{\r\n                //valores del state o las funciones a compartir con el arbol de componentes\r\n                panel: state.panel,\r\n                panelproyecto: state.panelproyecto,\r\n                proyectos: state.proyectos,\r\n                errorformulario: state.errorformulario,\r\n                proyectoactivo : state.proyectoactivo,\r\n                panelterminados : state.panelterminados,\r\n                proyectosterminados: state.proyectosterminados,\r\n                mensaje: state.mensaje,\r\n                badge:state.badge,\r\n                badgeT:state.badgeT,\r\n                mostrarPanel,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                showPanel,\r\n                validarFormulario,\r\n                proyectoActual,\r\n                eliminarProyecto,\r\n                mostrarTerminados,\r\n                terminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ProyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoReducer.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\types\\index.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskState.js",["176","177"],"import React, {useReducer} from 'react';\r\n//import el context y el reducer\r\nimport TaskContext from './taskContext';\r\nimport taskReducer from './taskReducer';\r\n//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TaskState = props => {\r\n    //state inicial\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaactual: null\r\n    }\r\n    const [ state, dispatch ] = useReducer(taskReducer, initialState);\r\n    //Funciones \r\n    //obtener las tareas relacionadas con el id del proyecto\r\n    const obtenerTareas = async proyecto => {\r\n       try {\r\n           const peticion = await clienteAxios.get('/api/task', {params: {proyecto}});\r\n        //    //console.log(peticion.data)\r\n        dispatch({\r\n            type: TASK_PROYECTO,\r\n            payload: peticion.data\r\n        });\r\n       } catch (error) {\r\n           //console.log(error);\r\n       }\r\n      \r\n    }\r\n    //Agregar nueva tarea\r\n    const agregarTarea = async tarea => {\r\n        try {\r\n        const consulta = await clienteAxios.post('/api/task', tarea);\r\n        \r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: tarea\r\n        });\r\n       } catch (error) {\r\n           \r\n       }        \r\n    }\r\n    //validar la tarea\r\n    const validarTarea = ()=> {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //eliminar tarea\r\n    const eliminarTarea = async (id, proyecto) => {            \r\n        try {\r\n            await clienteAxios.delete(`/api/task/${id}`, {params: {proyecto}});            \r\n            dispatch({\r\n                type: DELETE_TASK,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            //console.log(error);\r\n        }\r\n    }\r\n    //editar la tarea\r\n    const actualizarTask = async tarea => {\r\n        // //console.log(tarea)\r\n        try {\r\n            const requestcambio = await clienteAxios.put(`/api/task/${tarea._id}`, tarea);\r\n            //console.log(requestcambio.data.tarea)\r\n            dispatch({\r\n                type: ACTUALIZAR_TASK,\r\n                payload: requestcambio.data.tarea\r\n            });\r\n        } catch (error) {\r\n            //console.log(error)\r\n        }\r\n    }\r\n    const tareaActual = tarea => {      \r\n        dispatch({\r\n            type: TASK_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n    return (\r\n        <TaskContext.Provider\r\n            value = {{\r\n                //valores del state\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaactual: state.tareaactual,\r\n                counttask: state.counttask,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                tareaActual,\r\n                actualizarTask\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\nexport default TaskState;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskReducer.js",["178"],"//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case TASK_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            } \r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto:[action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case DELETE_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }       \r\n        case ACTUALIZAR_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map( tarea => (tarea._id === action.payload._id ?action.payload : tarea)),\r\n                tareaactual: null\r\n            }\r\n        case TASK_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaactual: action.payload\r\n            }       \r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaState.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaReducer.js",["179"],"//importo los types\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authState.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authReducer.js",["180"],"//importo los types\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    OBTENER_USUARIO,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch (action.type) {\r\n        case REGISTRO_EXITOSO:\r\n            case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false,\r\n                cargandoSpin: true\r\n        }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                autenticado: true,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false,\r\n                cargandoSpin: false\r\n        }\r\n        default:\r\n           return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\axios.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\tokenAuth.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\PrivateRoute.js",["181"],"import React, { useContext, useEffect } from 'react';\r\nimport {Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({component: Component, ...props}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { cargando, autenticado, userAuth } = authContext;\r\n    useEffect(()=>{\r\n        userAuth();\r\n    },[]);\r\n    return (\r\n        <Route {...props} render = {props => !autenticado && !cargando      \r\n            ?( <Redirect  to=\"/\"/>)\r\n            :( <Component  {...props} /> )\r\n        }\r\n\r\n        />\r\n     );\r\n}\r\n \r\nexport default PrivateRoute;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\index.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\index.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\index.jsx",["182"],"import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Login from \"./Login\";\r\nimport SignIn from \"./Signin\";\r\nimport AnimationContext from \"../../context/animations/AnimationContext\";\r\n\r\nimport \"./index.scss\";\r\n\r\n\r\nfunction AuthPage() {\r\n  const animaContext = useContext(AnimationContext);\r\n  const { panel, movePanelAuth } = animaContext;\r\n  return (\r\n    <>\r\n      <div className={panel ? \"container sign_up_mode\" : \"container\"}>\r\n        <div className=\"form_container\">\r\n          <div className=\"singin_singup_container\">\r\n            <Login />\r\n            <SignIn />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"panel_container\">\r\n          <div className=\"panel panel-left\">\r\n            <div className=\"content\">\r\n\r\n              <h3>¿Nuevo aqui?</h3>\r\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n              <button\r\n                className=\"btn transparent\"\r\n                onClick={() => movePanelAuth()}\r\n                id=\"sing-up-btn\"\r\n              >\r\n                Registrarse\r\n              </button>\r\n                            \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"panel right-panel\">\r\n            <div className=\"content\">\r\n              <h3>¿Ya tenes una cuenta?</h3>\r\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n              <button\r\n                className=\"btn transparent\"\r\n                onClick={() => movePanelAuth()}\r\n                id=\"sing-in-btn\"\r\n              >\r\n                Inicia Sesion\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Login\\index.jsx",["183","184"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\n\r\n\r\nconst Login = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, cargandoSpin, loginUser } = authContext;\r\n\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = user;\r\n\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //valido que no tenga campos vacios\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son necesarios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    loginUser(user);\r\n  };\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      history.push(\"/dashboard\");\r\n      if (mensaje) {\r\n        mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n      }\r\n    }\r\n  }, [mensaje, autenticado, props.history]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"sing_in_form\">\r\n        <h2 className=\"titulo\">Iniciar Sesion</h2>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <div className=\"input_field\">\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario o Email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input_field\">\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn primario\"\r\n          value=\"Entrar\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Signin\\index.jsx",["185","186"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserAlt, FaLock, FaEnvelope } from \"react-icons/fa\";\r\n\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\n\r\nconst SignIn = (props) => {\r\n  //contexts\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, cargandoSpin, registerUser } = authContext;\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      setTimeout(() => {\r\n        history.push(\"/dashboard\");\r\n      }, 2000);\r\n    }\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n  }, [autenticado, mensaje, props.history]);\r\n\r\n  const [usern, setUserN] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n  const { nombre, email, password, confirmar } = usern;\r\n\r\n  const handleChange = (e) => {\r\n    setUserN({\r\n      ...usern,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //pasword minimo de 6 caracteres\r\n    if (password.length < 6) {\r\n      mostrarAlerta(\r\n        \"el password debe ser de al menos 6 caracteres\",\r\n        \"alerta-error\"\r\n      );\r\n      return;\r\n    }\r\n    //los dos passwords iguales\r\n    if (password.trim() !== confirmar.trim()) {\r\n      mostrarAlerta(\"Los passwords deben ser iguales\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //pasarlo al action\r\n    registerUser({\r\n      nombre,\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"sing_up_form\" onSubmit={handleSubmit}>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <h2 className=\"titulo\">Obtener una Cuenta</h2>\r\n        <div className=\"input_field\">\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input_field\">\r\n          <FaEnvelope  />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input_field\">\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input_field\">\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmar\"\r\n            value={confirmar}\r\n            onChange={handleChange}\r\n            placeholder=\"Repetir Contraseña\"\r\n          />\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn primario\"\r\n          value=\"Continuar\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\index.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationState.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationContext.jsx",["187"],"import React, {createContext} from 'react';\r\nconst AnimationContext = createContext();\r\nexport default AnimationContext;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationReducer.jsx",["188"],"//importar types\r\nimport {\r\n  PANELAUTH,\r\n  PANELNUEVO,\r\n  PANELPROYECTOS,\r\n  PANELTERMIANDOS\r\n} from '../../types';\r\nexport default ( state, action ) => {\r\n    switch (action.type) {\r\n      case PANELAUTH:\r\n          return{\r\n           panel: !state.panel,\r\n           panelnuevoproyecto: false,\r\n           panelproyectos: false,\r\n           panelterminados: false\r\n          }\r\n      case PANELNUEVO:\r\n        return{\r\n          panelnuevoproyecto: !state.panelnuevoproyecto,\r\n          panelproyectos: false,\r\n          panelterminados: false\r\n        }\r\n      case PANELPROYECTOS:\r\n        return{\r\n          panelnuevoproyecto: false,\r\n          panelproyectos: !state.panelproyectos,\r\n          panelterminados: false\r\n\r\n        }\r\n      case PANELTERMIANDOS:\r\n        return{\r\n          panelnuevoproyecto:false,\r\n          panelproyectos: false,\r\n          panelterminados: !state.panelterminados\r\n        }        \r\n        default:\r\n            return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\index.jsx",["189","190","191"],"import React, { useContext, useEffect } from \"react\";\r\nimport SideBar from \"./auxiliars/SideBar\";\r\nimport Container from \"./auxiliars/Container\";\r\nimport ProyectoContext from \"../../context/proyects/proyectoContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport \"./index.scss\";\r\nimport FormTask from \"./auxiliars/task/FormTask\";\r\nimport AnimationContext from \"../../context/animations/AnimationContext\";\r\n\r\nconst DashboardPage = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { proyectoactivo, mensaje, proyectoActual } = proyectoContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { userAuth } = authContext;\r\n\r\n  const alertacontext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertacontext;\r\n\r\n  const animationContext = useContext(AnimationContext);\r\n  const {\r\n    panelnuevoproyecto,\r\n    panelproyectos,\r\n    panelterminados,\r\n  } = animationContext;\r\n\r\n  useEffect(() => {\r\n    userAuth();\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    if (panelnuevoproyecto || panelproyectos || panelterminados) {\r\n      proyectoActual(null);\r\n    }\r\n  }, [mensaje]);\r\n  return (\r\n    <>\r\n      <div className=\"Dashboard\">\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <SideBar />\r\n        <Container />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\TaskBody.js",["192"],"import React,{ useContext } from 'react';\r\nimport FormTask from './FormTask';\r\nimport TaskList from './TaskList';\r\nimport ProyectList from \"../proyects/ProyectList\";\r\n\r\nimport ProyectoContext from '../../../../context/proyects/proyectoContext';\r\nimport NewProyect from '../proyects/NewProyect';\r\nimport EndProyects from '../proyects/EndProyects';\r\n\r\nconst TaskBody = () => {\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const { panel, panelproyecto, panelterminados, proyectoactivo, eliminarProyecto, terminarProyecto } = proyectoContext;\r\n    \r\n    if(!proyectoactivo) return <div className=\"TaskBody_inactive\">\r\n        <p>Todavia no hay un proyecto activo</p>\r\n        <NewProyect />\r\n        {/* <ProyectList />\r\n        <EndProyects /> */}\r\n    </div>\r\n\r\n    const handdleProyectState = proyecto => {\r\n        if(!proyecto.estado){\r\n            proyecto.estado = true;\r\n        }\r\n        terminarProyecto(proyecto)\r\n    }\r\n\r\n    const [proyectoActual] = proyectoactivo;\r\n    return ( \r\n        <>\r\n        <main className={panel || panelproyecto || panelterminados ?\"dashboard_taskbody active\" :\"dashboard_taskbody\"} >\r\n        {panelproyecto && <ProyectList />}\r\n           <h2>{proyectoActual.nombre}</h2>\r\n                <FormTask />\r\n                <div className=\"contenedor_tareas\">\r\n                <TaskList/>\r\n                </div>\r\n                \r\n                <div className=\"button_wraper\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn_terminar\"\r\n                        onClick={()=> handdleProyectState(proyectoActual)}\r\n                    >Terminar Proyecto</button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn_eliminar\"\r\n                        onClick={()=> eliminarProyecto(proyectoActual._id)}\r\n                    >Eliminar Proyecto</button> \r\n                </div>  \r\n        </main>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TaskBody;\r\n\r\n",["193","194"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\FormTask.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\TaskList.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\task\\Task.js",["195"],"import React,{useContext, useEffect} from 'react';\r\nimport TaskContext from '../../../../context/task/taskContext';\r\nimport ProyectoContext from '../../../../context/proyects/proyectoContext';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Task = ({tarea}) => {\r\n\r\n    const taskContext = useContext(TaskContext);\r\n    const { eliminarTarea, obtenerTareas, actualizarTask, tareaActual } = taskContext;\r\n\r\n    const proyectContext = useContext(ProyectoContext);\r\n    const {proyectoactivo} = proyectContext;\r\n    //extraigo el proyecto activo para tener la referencia cuando actualice los proyectos\r\n    const [proyectoActual] =proyectoactivo;\r\n    useEffect(()=>{\r\n        obtenerTareas(proyectoActual._id);\r\n    },[]);\r\n    const handleClick = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        // obtenerTareas(proyectoActual._id);\r\n    }\r\n    const cambiarEstadoTarea = tarea => {\r\n        if(tarea.estado){\r\n            tarea.estado = false;\r\n        }else{\r\n            tarea.estado = true;\r\n        }\r\n        actualizarTask(tarea);\r\n    }\r\n    \r\nconst item = {\r\n     hidden: { y: 20, opacity: 0 },\r\n     visible: {\r\n       y: 0,\r\n       opacity: 1\r\n     }\r\n   };\r\n\r\n    return ( \r\n        <motion.li \r\n            key={tarea._id}           \r\n            className=\"object_task\"\r\n            variants={item}\r\n        >\r\n            <p>{tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado \r\n                ?(<button\r\n                    onClick={() => cambiarEstadoTarea(tarea)}\r\n                    type=\"button\"\r\n                    className=\"btn btn_estado task_completa\"\r\n                >Completa</button>) \r\n                :(<button\r\n                    onClick={() => cambiarEstadoTarea(tarea)}\r\n                    type=\"button\"\r\n                    className=\"btn btn_estado task_pendiente\"\r\n                >Pendiente</button>)\r\n                }            \r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn_eliminar\"\r\n                    onClick ={()=>handleClick(tarea._id)}\r\n                >Eliminar</button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn_editar\"\r\n                    onClick={ ()=> tareaActual(tarea)}\r\n                >Editar</button>\r\n            </div>\r\n        </motion.li>\r\n     );\r\n}\r\n \r\nexport default Task;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\SideBar\\index.jsx",["196","197","198","199","200","201","202","203","204","205","206"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\Container\\index.jsx",["207","208","209"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\ProyectList.jsx",["210"],"import React, { useContext, useEffect } from \"react\";\r\nimport { VscChromeClose } from 'react-icons/vsc'\r\nimport Proyect from \"./Proyect\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport \"./index.scss\";\r\nimport AnimationContext from \"../../../../context/animations/AnimationContext\";\r\nconst ProyectList = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { proyectos, obtenerProyectos } = proyectoContext;\r\n\r\n  const animationContext = useContext(AnimationContext);\r\n  const { movePanelAuth } = animationContext;\r\n\r\n  //obtener proyectos cuando carga el componente\r\n  useEffect(() => {\r\n    obtenerProyectos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ProyectList_Container\">\r\n      <button className=\"ProyectList_Close\" onClick={()=> movePanelAuth()}><VscChromeClose/></button>\r\n      {proyectos.length === 0 ? (\r\n        <p className=\"object_list\">Todavia no creaste ningun proyecto!</p>\r\n      ) : (\r\n        <ul>\r\n          {proyectos.map((proyecto) => (\r\n            <Proyect key={proyecto._id} proyecto={proyecto} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProyectList;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\Proyect.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\NewProyect.jsx",["211"],"import React, { useContext, useState } from \"react\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\n\r\n\r\nconst NewProyect = () => {\r\n  const [proyect, createProyect] = useState({\r\n    nombre: \"\",\r\n    desc: \"\",\r\n  });\r\n\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const {\r\n    panel,\r\n    errorformulario,\r\n    agregarProyecto,\r\n    validarFormulario,\r\n  } = proyectoContext;\r\n\r\n  const { nombre, desc } = proyect;\r\n\r\n  const handleChange = (e) => {\r\n    createProyect({\r\n      ...proyect,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //enviar lo que envia el usuario\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombre.trim() === \"\") {\r\n      validarFormulario();\r\n      return;\r\n    }\r\n    createProyect({\r\n      nombre: \"\",\r\n      desc: \"\",\r\n    });\r\n    agregarProyecto(proyect);\r\n    // //console.log(proyect)\r\n  };\r\n\r\n  return (\r\n    // <div className={panel ? \"dashboard_panel active\" : \"dashboard_panel\"}>\r\n    <div className=\"NewProyect\">\r\n      <form onSubmit={handleSubmit} className=\"NewProyect_Form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre del proyecto\"\r\n          name=\"nombre\"\r\n          value={nombre}\r\n          onChange={handleChange}\r\n          className=\"NewProyect_Form_input\"\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          maxLength= '120'\r\n          placeholder=\"Descripcion breve\"\r\n          name=\"desc\"\r\n          value={desc}\r\n          onChange={handleChange}\r\n          className=\"NewProyect_Form_TextArea\"\r\n        />\r\n        {errorformulario ? (\r\n          <p className=\"input_errorP\">El nombre es necesario!</p>\r\n        ) : null}\r\n        <input type=\"submit\" value=\"Guardar\" className=\"NewProyect_Btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewProyect;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Dashboard\\auxiliars\\proyects\\EndProyects.jsx",["212"],"import React, { useContext } from \"react\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport './index.scss'\r\nconst EndProyects = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const {\r\n    panelterminados,\r\n    proyectosterminados,\r\n    eliminarProyecto,\r\n  } = proyectoContext;\r\n\r\n  return (\r\n    <div className=\"EndProyects\">\r\n      <ul className=\"EndProyects_List\">\r\n        <li className=\"EndProyects_List_Item\">\r\n          <p className=\"EndProyects_List_Item-Name\">Proyecto de simulacion</p>\r\n          <p className=\"EndProyects_List_Item-Task\">Tareas en este proyecto</p>\r\n          <span>Terminado el dia 01/01/21</span>\r\n        </li>\r\n        {proyectosterminados.length === 0 ? (\r\n          <li className=\"Default\">Todavia no terminaste ningun proyecto</li>\r\n        ) : null}\r\n        {proyectosterminados.map((proyecto) => (\r\n          <li key={proyecto._id} className=\"proyecto_terminado\">\r\n            <p>{proyecto.nombre}</p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn_eliminar\"\r\n              onClick={() => eliminarProyecto(proyecto._id)}\r\n            >\r\n              Eliminar\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndProyects;\r\n",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":131,"column":15,"nodeType":"219","messageId":"220","endLine":131,"endColumn":23},{"ruleId":"217","severity":1,"message":"221","line":11,"column":5,"nodeType":"219","messageId":"220","endLine":11,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":43,"column":15,"nodeType":"219","messageId":"220","endLine":43,"endColumn":23},{"ruleId":"217","severity":1,"message":"221","line":7,"column":5,"nodeType":"219","messageId":"220","endLine":7,"endColumn":15},{"ruleId":"222","severity":1,"message":"223","line":4,"column":1,"nodeType":"224","endLine":17,"endColumn":2},{"ruleId":"222","severity":1,"message":"223","line":11,"column":1,"nodeType":"224","endLine":46,"endColumn":2},{"ruleId":"225","severity":1,"message":"226","line":10,"column":7,"nodeType":"227","endLine":10,"endColumn":9,"suggestions":"228"},{"ruleId":"217","severity":1,"message":"229","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"230","line":11,"column":33,"nodeType":"219","messageId":"220","endLine":11,"endColumn":45},{"ruleId":"225","severity":1,"message":"231","line":45,"column":6,"nodeType":"227","endLine":45,"endColumn":43,"suggestions":"232"},{"ruleId":"217","severity":1,"message":"230","line":14,"column":33,"nodeType":"219","messageId":"220","endLine":14,"endColumn":45},{"ruleId":"225","severity":1,"message":"231","line":25,"column":6,"nodeType":"227","endLine":25,"endColumn":43,"suggestions":"233"},{"ruleId":"217","severity":1,"message":"234","line":1,"column":8,"nodeType":"219","messageId":"220","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":8,"column":1,"nodeType":"224","endLine":39,"endColumn":2},{"ruleId":"217","severity":1,"message":"235","line":8,"column":8,"nodeType":"219","messageId":"220","endLine":8,"endColumn":16},{"ruleId":"217","severity":1,"message":"236","line":13,"column":11,"nodeType":"219","messageId":"220","endLine":13,"endColumn":25},{"ruleId":"225","severity":1,"message":"237","line":36,"column":6,"nodeType":"227","endLine":36,"endColumn":15,"suggestions":"238"},{"ruleId":"217","severity":1,"message":"239","line":8,"column":8,"nodeType":"219","messageId":"220","endLine":8,"endColumn":19},{"ruleId":"213","replacedBy":"240"},{"ruleId":"215","replacedBy":"241"},{"ruleId":"225","severity":1,"message":"242","line":17,"column":7,"nodeType":"227","endLine":17,"endColumn":9,"suggestions":"243"},{"ruleId":"217","severity":1,"message":"244","line":1,"column":29,"nodeType":"219","messageId":"220","endLine":1,"endColumn":37},{"ruleId":"217","severity":1,"message":"245","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":18},{"ruleId":"217","severity":1,"message":"239","line":4,"column":8,"nodeType":"219","messageId":"220","endLine":4,"endColumn":19},{"ruleId":"217","severity":1,"message":"246","line":14,"column":5,"nodeType":"219","messageId":"220","endLine":14,"endColumn":10},{"ruleId":"217","severity":1,"message":"247","line":15,"column":5,"nodeType":"219","messageId":"220","endLine":15,"endColumn":18},{"ruleId":"217","severity":1,"message":"248","line":16,"column":5,"nodeType":"219","messageId":"220","endLine":16,"endColumn":20},{"ruleId":"217","severity":1,"message":"249","line":17,"column":5,"nodeType":"219","messageId":"220","endLine":17,"endColumn":10},{"ruleId":"217","severity":1,"message":"250","line":18,"column":5,"nodeType":"219","messageId":"220","endLine":18,"endColumn":11},{"ruleId":"217","severity":1,"message":"251","line":19,"column":5,"nodeType":"219","messageId":"220","endLine":19,"endColumn":14},{"ruleId":"217","severity":1,"message":"252","line":20,"column":5,"nodeType":"219","messageId":"220","endLine":20,"endColumn":17},{"ruleId":"217","severity":1,"message":"253","line":21,"column":5,"nodeType":"219","messageId":"220","endLine":21,"endColumn":22},{"ruleId":"217","severity":1,"message":"254","line":1,"column":29,"nodeType":"219","messageId":"220","endLine":1,"endColumn":38},{"ruleId":"217","severity":1,"message":"245","line":2,"column":8,"nodeType":"219","messageId":"220","endLine":2,"endColumn":18},{"ruleId":"217","severity":1,"message":"255","line":10,"column":11,"nodeType":"219","messageId":"220","endLine":10,"endColumn":29},{"ruleId":"225","severity":1,"message":"256","line":17,"column":6,"nodeType":"227","endLine":17,"endColumn":8,"suggestions":"257"},{"ruleId":"217","severity":1,"message":"246","line":13,"column":5,"nodeType":"219","messageId":"220","endLine":13,"endColumn":10},{"ruleId":"217","severity":1,"message":"248","line":7,"column":5,"nodeType":"219","messageId":"220","endLine":7,"endColumn":20},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'consulta' is assigned a value but never used.","Identifier","unusedVar","'TASK_STATE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userAuth'. Either include it or remove the dependency array.","ArrayExpression",["260"],"'styled' is defined but never used.","'cargandoSpin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'mostrarAlerta'. Either include them or remove the dependency array.",["261"],["262"],"'React' is defined but never used.","'FormTask' is defined but never used.","'proyectoactivo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mostrarAlerta', 'panelnuevoproyecto', 'panelproyectos', 'panelterminados', 'proyectoActual', and 'userAuth'. Either include them or remove the dependency array.",["263"],"'EndProyects' is defined but never used.",["258"],["259"],"React Hook useEffect has missing dependencies: 'obtenerTareas' and 'proyectoActual._id'. Either include them or remove the dependency array.",["264"],"'useState' is defined but never used.","'NewProyect' is defined but never used.","'panel' is assigned a value but never used.","'panelproyecto' is assigned a value but never used.","'panelterminados' is assigned a value but never used.","'badge' is assigned a value but never used.","'badgeT' is assigned a value but never used.","'showPanel' is assigned a value but never used.","'mostrarPanel' is assigned a value but never used.","'mostrarTerminados' is assigned a value but never used.","'useEffect' is defined but never used.","'panelnuevoproyecto' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'obtenerProyectos'. Either include it or remove the dependency array.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [userAuth]",{"range":"278","text":"279"},"Update the dependencies array to be: [mensaje, autenticado, props.history, history, mostrarAlerta]",{"range":"280","text":"281"},"Update the dependencies array to be: [autenticado, history, mensaje, mostrarAlerta, props.history]",{"range":"282","text":"283"},"Update the dependencies array to be: [mensaje, mostrarAlerta, panelnuevoproyecto, panelproyectos, panelterminados, proyectoActual, userAuth]",{"range":"284","text":"285"},"Update the dependencies array to be: [obtenerTareas, proyectoActual._id]",{"range":"286","text":"287"},"Update the dependencies array to be: [obtenerProyectos]",{"range":"288","text":"289"},[387,389],"[userAuth]",[1289,1326],"[mensaje, autenticado, props.history, history, mostrarAlerta]",[836,873],"[autenticado, history, mensaje, mostrarAlerta, props.history]",[1241,1250],"[mensaje, mostrarAlerta, panelnuevoproyecto, panelproyectos, panelterminados, proyectoActual, userAuth]",[706,708],"[obtenerTareas, proyectoActual._id]",[676,678],"[obtenerProyectos]"]