[{"L:\\practicas\\proyects\\taskapp\\cliente\\src\\index.js":"1","L:\\practicas\\proyects\\taskapp\\cliente\\src\\App.js":"2","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\layout\\SideBar.js":"3","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\ProyectList.js":"4","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\NewProyect.js":"5","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoContext.js":"6","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoState.js":"7","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoReducer.js":"8","L:\\practicas\\proyects\\taskapp\\cliente\\src\\types\\index.js":"9","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\TaskBody.js":"10","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\FormTask.js":"11","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\TaskList.js":"12","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\Task.js":"13","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskState.js":"14","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskContext.js":"15","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskReducer.js":"16","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\Proyect.js":"17","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\EndProyects.js":"18","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\dashboard\\DashboardIndex.js":"19","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaState.js":"20","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaContext.js":"21","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaReducer.js":"22","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authState.js":"23","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authContext.js":"24","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authReducer.js":"25","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\axios.js":"26","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\tokenAuth.js":"27","L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\PrivateRoute.js":"28","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\layout\\SpinKit.js":"29","L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\index.jsx":"30","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\index.jsx":"31","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\index.jsx":"32","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Login\\index.jsx":"33","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Signin\\index.jsx":"34","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\index.jsx":"35","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationState.jsx":"36","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationContext.jsx":"37","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationReducer.jsx":"38"},{"size":251,"mtime":1615517947782,"results":"39","hashOfConfig":"40"},{"size":135,"mtime":1615505479454,"results":"41","hashOfConfig":"40"},{"size":2243,"mtime":1613880410847,"results":"42","hashOfConfig":"40"},{"size":1215,"mtime":1613795085728,"results":"43","hashOfConfig":"40"},{"size":2658,"mtime":1613878458802,"results":"44","hashOfConfig":"40"},{"size":110,"mtime":1611726567576,"results":"45","hashOfConfig":"40"},{"size":5152,"mtime":1613878486650,"results":"46","hashOfConfig":"40"},{"size":3243,"mtime":1613797795009,"results":"47","hashOfConfig":"40"},{"size":1358,"mtime":1615694947561,"results":"48","hashOfConfig":"40"},{"size":1653,"mtime":1613801119699,"results":"49","hashOfConfig":"40"},{"size":2739,"mtime":1613878458728,"results":"50","hashOfConfig":"40"},{"size":1179,"mtime":1613878458728,"results":"51","hashOfConfig":"40"},{"size":2398,"mtime":1613711000642,"results":"52","hashOfConfig":"40"},{"size":3163,"mtime":1613878458729,"results":"53","hashOfConfig":"40"},{"size":105,"mtime":1612239337757,"results":"54","hashOfConfig":"40"},{"size":1433,"mtime":1613800492482,"results":"55","hashOfConfig":"40"},{"size":997,"mtime":1613711159458,"results":"56","hashOfConfig":"40"},{"size":1630,"mtime":1613800516130,"results":"57","hashOfConfig":"40"},{"size":1379,"mtime":1613671655089,"results":"58","hashOfConfig":"40"},{"size":1087,"mtime":1613516172440,"results":"59","hashOfConfig":"40"},{"size":111,"mtime":1613371219829,"results":"60","hashOfConfig":"40"},{"size":403,"mtime":1613514197880,"results":"61","hashOfConfig":"40"},{"size":3801,"mtime":1615752537667,"results":"62","hashOfConfig":"40"},{"size":105,"mtime":1613517890339,"results":"63","hashOfConfig":"40"},{"size":1223,"mtime":1613880291126,"results":"64","hashOfConfig":"40"},{"size":144,"mtime":1613892765094,"results":"65","hashOfConfig":"40"},{"size":271,"mtime":1613538990777,"results":"66","hashOfConfig":"40"},{"size":636,"mtime":1615700351418,"results":"67","hashOfConfig":"40"},{"size":825,"mtime":1613878572190,"results":"68","hashOfConfig":"40"},{"size":1225,"mtime":1615701066884,"results":"69","hashOfConfig":"40"},{"size":44,"mtime":1615506078873,"results":"70","hashOfConfig":"40"},{"size":1740,"mtime":1615827115512,"results":"71","hashOfConfig":"40"},{"size":2277,"mtime":1615790215501,"results":"72","hashOfConfig":"40"},{"size":3525,"mtime":1615826977553,"results":"73","hashOfConfig":"40"},{"size":323,"mtime":1615695384224,"results":"74","hashOfConfig":"40"},{"size":675,"mtime":1615695001794,"results":"75","hashOfConfig":"40"},{"size":120,"mtime":1615693042836,"results":"76","hashOfConfig":"40"},{"size":265,"mtime":1615696049650,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"cpe98q",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"80"},"L:\\practicas\\proyects\\taskapp\\cliente\\src\\index.js",[],["169","170"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\App.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\layout\\SideBar.js",["171"],"import React, {useContext, useState} from 'react';\r\nimport NewProyect from '../proyects/NewProyect';\r\nimport EndProyects from '../proyects/EndProyects';\r\nimport ProyectoContext from '../../context/proyects/proyectoContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst SideBar = () => {\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const { panel, panelproyecto, panelterminados, badge, badgeT, showPanel, mostrarPanel, mostrarTerminados } = proyectoContext;\r\n    \r\n    const authContext = useContext(AuthContext);\r\n    const { user, EndSesion } = authContext;\r\n    \r\n    const Exit = () =>{\r\n        setTimeout(() => {\r\n            EndSesion() \r\n        }, 1000);\r\n    }\r\n    return (         \r\n        <div className={panel || panelproyecto || panelterminados ?\"dashboard_sidebar active\" :\"dashboard_sidebar\"} >\r\n            <div className=\"brand_logo\">\r\n                <h2>TASK</h2><span>app</span>\r\n            </div>\r\n            <div className=\"name_container\">\r\n                {user ?(<p className=\"name\">Hola! <span>{user.nombre}</span></p>) :null}\r\n                \r\n            </div>\r\n            <div className=\"btn_container_dashboard\">\r\n                <button \r\n                    onClick={()=> showPanel()}\r\n                    className=\"btn btn_crear\">Crear Proyecto</button>\r\n                               \r\n                <div className=\"badge\">\r\n                    <button \r\n                        data-badge=\"!\"\r\n                        onClick={()=> mostrarPanel()}\r\n                        className={badge ?\"btn btn_crear show\" :\"btn btn_crear\"}>Mis proyectos</button>\r\n                </div>\r\n                <div className=\"badge\">\r\n                    <button \r\n                        data-badge=\"!\"\r\n                        onClick={()=>mostrarTerminados()}\r\n                        className={badgeT ?\"btn btn_crear show\" :\"btn btn_crear\"}>Proyectos Terminados</button> \r\n                </div>          \r\n            </div>\r\n        <NewProyect />        \r\n        <EndProyects />\r\n         <button \r\n            className=\"btn btn_exit\"\r\n            onClick={()=> Exit()}\r\n        >Cerrar Sesión</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SideBar;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\ProyectList.js",["172","173","174"],"import React, {useContext, useEffect}  from 'react';\r\nimport Proyect from './Proyect';\r\nimport ProyectoContext from '../../context/proyects/proyectoContext';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst container = {\r\n  hidden: { opacity: 1, scale: 0 },\r\n  visible: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      delayChildren: 0.1,\r\n      staggerChildren: 0.1\r\n    }\r\n  }\r\n}\r\n\r\nconst ProyectList = () => {\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const { panelproyecto, proyectos, proyectosterminados, obtenerProyectos, terminarProyecto } = proyectoContext;\r\n\r\n    //obtener proyectos cuando carga el componente    \r\n    useEffect(() => {\r\n        obtenerProyectos();              \r\n    }, []);     \r\n\r\n    return ( \r\n    <div className={panelproyecto ?\"list_container\" :null}>\r\n      {proyectos.length === 0 \r\n      ?<p className=\"object_list\">Todavia no creaste ningun proyecto!</p> \r\n      :(<motion.ul\r\n          variants={container}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          >{ proyectos.map(proyecto => (<Proyect key={proyecto._id} proyecto={proyecto}/>))\r\n          }</motion.ul> )}   \r\n    </div>\r\n     );\r\n}\r\n \r\nexport default ProyectList;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\NewProyect.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoState.js",["175"],"import React, { useReducer } from 'react'\r\n//importo el context y el reducer\r\nimport ProyectoContext from './proyectoContext';\r\nimport ProyectoReducer from './proyectoReducer';\r\n//importo mis types\r\nimport {\r\n        MOSTRAR_FORMULARIO,\r\n        MOSTRAR_PROYECTOS,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTIVO,\r\n        ELIMINAR_PROYECTO,\r\n        MOSTRAR_TERMINADOS,\r\n        TERMINAR_PROYECTO,\r\n        PROYECTO_ERROR\r\n        } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst ProyectoState = props =>{\r\n    const InitialState = {\r\n        panel: false,\r\n        panelproyecto: false,\r\n        proyectos: [],\r\n        errorformulario: false,\r\n        proyectoactivo: null,\r\n        panelterminados: false,\r\n        proyectosterminados: [],\r\n        mensaje: null,\r\n        badge: false,\r\n        badgeT: false\r\n    }\r\n  \r\n    const [ state, dispatch ]= useReducer(ProyectoReducer, InitialState);\r\n    //mis funciones\r\n    const showPanel = () =>{\r\n        dispatch({\r\n            type : MOSTRAR_FORMULARIO\r\n        })\r\n     }\r\n     //mostarar el componente de proyectos\r\n     const mostrarPanel = () =>{\r\n         dispatch({\r\n             type: MOSTRAR_PROYECTOS\r\n         })\r\n     }\r\n     const mostrarTerminados = ()=> {\r\n        dispatch({\r\n        type: MOSTRAR_TERMINADOS\r\n        })\r\n\r\n    }\r\n     //obtener los proyectos\r\n     const obtenerProyectos = async() =>{\r\n      try {\r\n        const requestP = await clienteAxios.get('/api/proyect');\r\n        // //console.log(requestP.data);\r\n        dispatch({\r\n            type :OBTENER_PROYECTOS,\r\n            payload: requestP.data\r\n         });\r\n\r\n      } catch (error) {\r\n        const alerta = {\r\n            msg:  error.response.data.msg,\r\n            categoria: 'alerta-error'\r\n        }\r\n        dispatch({\r\n            type: PROYECTO_ERROR,\r\n            payload: alerta\r\n        })\r\n      }\r\n     }\r\n     //Agrega Proyectos\r\n     const agregarProyecto = async proyect =>{      \r\n        try {\r\n            const requestP = await clienteAxios.post('/api/proyect', proyect)\r\n            // //console.log(requestP.data.proyect);\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                 payload: requestP.data.proyect\r\n            })\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg:  error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n     }\r\n     //Valido el formulario\r\n     const validarFormulario = () =>{\r\n         dispatch({\r\n             type: VALIDAR_FORMULARIO\r\n         })\r\n     }\r\n     //Seleccionar y poner un proyecto como activo\r\n     const proyectoActual = proyecto =>{        \r\n         dispatch({\r\n             type: PROYECTO_ACTIVO,\r\n             payload: proyecto\r\n         });\r\n     }\r\n     //Eliminar las tareas\r\n    const eliminarProyecto = async proyectoID => {\r\n    //    //console.log (proyectoID)\r\n       try {\r\n        await clienteAxios.delete(`/api/proyect/${proyectoID}`);\r\n        dispatch({\r\n            type: ELIMINAR_PROYECTO,\r\n            payload: proyectoID\r\n         });\r\n       } catch (error) {           \r\n        //    //console.log(error.response.data.msg);\r\n           const alerta = {\r\n               msg:  error.response.data.msg,\r\n               categoria: 'alerta-error dash'\r\n           }\r\n           dispatch({\r\n               type: PROYECTO_ERROR,\r\n               payload: alerta\r\n           })\r\n       }\r\n     }    \r\n    const terminarProyecto = async proyecto => {\r\n        //console.log(proyecto)\r\n       try {\r\n        const consulta = await clienteAxios.put(`/api/proyect/${proyecto._id}`, proyecto);\r\n        //console.log(consulta)\r\n        dispatch({\r\n            type: TERMINAR_PROYECTO,\r\n            payload: proyecto\r\n        });\r\n       } catch (error) {\r\n           //console.log(error.response);\r\n       }\r\n        \r\n    }\r\n            \r\n    return(\r\n        <ProyectoContext.Provider\r\n            value={{\r\n                //valores del state o las funciones a compartir con el arbol de componentes\r\n                panel: state.panel,\r\n                panelproyecto: state.panelproyecto,\r\n                proyectos: state.proyectos,\r\n                errorformulario: state.errorformulario,\r\n                proyectoactivo : state.proyectoactivo,\r\n                panelterminados : state.panelterminados,\r\n                proyectosterminados: state.proyectosterminados,\r\n                mensaje: state.mensaje,\r\n                badge:state.badge,\r\n                badgeT:state.badgeT,\r\n                mostrarPanel,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                showPanel,\r\n                validarFormulario,\r\n                proyectoActual,\r\n                eliminarProyecto,\r\n                mostrarTerminados,\r\n                terminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ProyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\proyects\\proyectoReducer.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\types\\index.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\TaskBody.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\FormTask.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\TaskList.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\task\\Task.js",["176"],"import React,{useContext, useEffect} from 'react';\r\nimport TaskContext from '../../context/task/taskContext';\r\nimport ProyectoContext from '../../context/proyects/proyectoContext';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Task = ({tarea}) => {\r\n\r\n    const taskContext = useContext(TaskContext);\r\n    const { eliminarTarea, obtenerTareas, actualizarTask, tareaActual } = taskContext;\r\n\r\n    const proyectContext = useContext(ProyectoContext);\r\n    const {proyectoactivo} = proyectContext;\r\n    //extraigo el proyecto activo para tener la referencia cuando actualice los proyectos\r\n    const [proyectoActual] =proyectoactivo;\r\n    useEffect(()=>{\r\n        obtenerTareas(proyectoActual._id);\r\n    },[]);\r\n    const handleClick = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        // obtenerTareas(proyectoActual._id);\r\n    }\r\n    const cambiarEstadoTarea = tarea => {\r\n        if(tarea.estado){\r\n            tarea.estado = false;\r\n        }else{\r\n            tarea.estado = true;\r\n        }\r\n        actualizarTask(tarea);\r\n    }\r\n    \r\nconst item = {\r\n     hidden: { y: 20, opacity: 0 },\r\n     visible: {\r\n       y: 0,\r\n       opacity: 1\r\n     }\r\n   };\r\n\r\n    return ( \r\n        <motion.li \r\n            key={tarea._id}           \r\n            className=\"object_task\"\r\n            variants={item}\r\n        >\r\n            <p>{tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado \r\n                ?(<button\r\n                    onClick={() => cambiarEstadoTarea(tarea)}\r\n                    type=\"button\"\r\n                    className=\"btn btn_estado task_completa\"\r\n                >Completa</button>) \r\n                :(<button\r\n                    onClick={() => cambiarEstadoTarea(tarea)}\r\n                    type=\"button\"\r\n                    className=\"btn btn_estado task_pendiente\"\r\n                >Pendiente</button>)\r\n                }            \r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn_eliminar\"\r\n                    onClick ={()=>handleClick(tarea._id)}\r\n                >Eliminar</button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn_editar\"\r\n                    onClick={ ()=> tareaActual(tarea)}\r\n                >Editar</button>\r\n            </div>\r\n        </motion.li>\r\n     );\r\n}\r\n \r\nexport default Task;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskState.js",["177","178"],"import React, {useReducer} from 'react';\r\n//import el context y el reducer\r\nimport TaskContext from './taskContext';\r\nimport taskReducer from './taskReducer';\r\n//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TaskState = props => {\r\n    //state inicial\r\n    const initialState = {\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaactual: null\r\n    }\r\n    const [ state, dispatch ] = useReducer(taskReducer, initialState);\r\n    //Funciones \r\n    //obtener las tareas relacionadas con el id del proyecto\r\n    const obtenerTareas = async proyecto => {\r\n       try {\r\n           const peticion = await clienteAxios.get('/api/task', {params: {proyecto}});\r\n        //    //console.log(peticion.data)\r\n        dispatch({\r\n            type: TASK_PROYECTO,\r\n            payload: peticion.data\r\n        });\r\n       } catch (error) {\r\n           //console.log(error);\r\n       }\r\n      \r\n    }\r\n    //Agregar nueva tarea\r\n    const agregarTarea = async tarea => {\r\n        try {\r\n        const consulta = await clienteAxios.post('/api/task', tarea);\r\n        \r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: tarea\r\n        });\r\n       } catch (error) {\r\n           \r\n       }        \r\n    }\r\n    //validar la tarea\r\n    const validarTarea = ()=> {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //eliminar tarea\r\n    const eliminarTarea = async (id, proyecto) => {            \r\n        try {\r\n            await clienteAxios.delete(`/api/task/${id}`, {params: {proyecto}});            \r\n            dispatch({\r\n                type: DELETE_TASK,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            //console.log(error);\r\n        }\r\n    }\r\n    //editar la tarea\r\n    const actualizarTask = async tarea => {\r\n        // //console.log(tarea)\r\n        try {\r\n            const requestcambio = await clienteAxios.put(`/api/task/${tarea._id}`, tarea);\r\n            //console.log(requestcambio.data.tarea)\r\n            dispatch({\r\n                type: ACTUALIZAR_TASK,\r\n                payload: requestcambio.data.tarea\r\n            });\r\n        } catch (error) {\r\n            //console.log(error)\r\n        }\r\n    }\r\n    const tareaActual = tarea => {      \r\n        dispatch({\r\n            type: TASK_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n    return (\r\n        <TaskContext.Provider\r\n            value = {{\r\n                //valores del state\r\n                tareasproyecto: state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaactual: state.tareaactual,\r\n                counttask: state.counttask,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                tareaActual,\r\n                actualizarTask\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    )\r\n}\r\nexport default TaskState;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\task\\taskReducer.js",["179"],"//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case TASK_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            } \r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto:[action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case DELETE_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }       \r\n        case ACTUALIZAR_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map( tarea => (tarea._id === action.payload._id ?action.payload : tarea)),\r\n                tareaactual: null\r\n            }\r\n        case TASK_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaactual: action.payload\r\n            }       \r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\Proyect.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\proyects\\EndProyects.js",["180"],"import React,{useContext} from 'react';\r\nimport ProyectoContext from '../../context/proyects/proyectoContext';\r\nimport TaskContext from '../../context/task/taskContext';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst EndProyects = () => {\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const { panelterminados, proyectosterminados, eliminarProyecto } = proyectoContext;\r\n    const taskContext = useContext(TaskContext);\r\n    const { counttask } = taskContext;\r\n    //animacion\r\n     const variants = {\r\n      open:{\r\n          x: 260,\r\n          opacity: 1,\r\n          transition: { x: { stiffness: 100, velocity: 50 }}\r\n      },\r\n      close:{\r\n          x: 0,\r\n          opacity: 0,\r\n          transition: { x: { stiffness: 100, velocity: 70  }}\r\n      }\r\n  }\r\n   \r\n    return ( \r\n      <motion.div \r\n         className={panelterminados ?\"dashboard_panel active width\" :\"dashboard_panel\"}\r\n         variants={variants}\r\n         animate={panelterminados ?'open' :'close'}\r\n      >\r\n       <ul className=\"lista_terminados\">\r\n         {proyectosterminados.length === 0 ?(<li>Todavia no terminaste ningun proyecto</li>) :null}\r\n         {proyectosterminados.map(proyecto => (\r\n            <motion.li \r\n              key={proyecto._id}\r\n              className=\"proyecto_terminado\"\r\n            ><p>{proyecto.nombre}</p>\r\n           <button\r\n                type=\"button\"\r\n                className=\"btn btn_eliminar\"\r\n                  onClick ={()=>eliminarProyecto(proyecto._id)}\r\n            >Eliminar</button>\r\n            </motion.li> ))} </ul>\r\n      </motion.div>\r\n     );\r\n}\r\n \r\nexport default EndProyects;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\dashboard\\DashboardIndex.js",["181"],"import React,{ useContext, useEffect } from 'react'\r\nimport SideBar from '../layout/SideBar';\r\nimport TaskBody from '../task/TaskBody';\r\nimport ProyectList from '../proyects/ProyectList';\r\nimport ProyectoContext from '../../context/proyects/proyectoContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\n\r\nconst DashboardIndex = () => {\r\n    const proyectoContext = useContext(ProyectoContext);\r\n    const {panelproyecto, mensaje} = proyectoContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const { userAuth } = authContext;\r\n\r\n    const alertacontext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertacontext;\r\n\r\n    useEffect(()=>{\r\n      userAuth();\r\n      if(mensaje){ mostrarAlerta(mensaje.msg, mensaje.categoria) }\r\n\r\n    }, [mensaje]);\r\n    return ( \r\n        <>\r\n          <div className=\"dashboard_wraper\">\r\n              {alerta ?(<div className={alerta.categoria}>{alerta.msg}</div>) :null}\r\n                <div className=\"glass_dashboard\">\r\n                    <SideBar/>     \r\n                   <div className=\"wraper\">\r\n                   {panelproyecto ? <ProyectList/> :null}\r\n                    <TaskBody />\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default DashboardIndex;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaState.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\alertas\\alertaReducer.js",["182"],"//importo los types\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authState.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authContext.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\auth\\authReducer.js",["183"],"//importo los types\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    OBTENER_USUARIO,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch (action.type) {\r\n        case REGISTRO_EXITOSO:\r\n            case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false,\r\n                cargandoSpin: true\r\n        }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                autenticado: true,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false,\r\n                cargandoSpin: false\r\n        }\r\n        default:\r\n           return state;\r\n    }\r\n}","L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\axios.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\config\\tokenAuth.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\PrivateRoute.js",["184"],"import React, { useContext, useEffect } from 'react';\r\nimport {Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({component: Component, ...props}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { cargando, autenticado, userAuth } = authContext;\r\n    useEffect(()=>{\r\n        userAuth();\r\n    },[]);\r\n    return (\r\n        <Route {...props} render = {props => !autenticado && !cargando      \r\n            ?( <Redirect  to=\"/\"/>)\r\n            :( <Component  {...props} /> )\r\n        }\r\n\r\n        />\r\n     );\r\n}\r\n \r\nexport default PrivateRoute;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\components\\layout\\SpinKit.js",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\routes\\index.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\index.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\index.jsx",["185"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Login\\index.jsx",["186","187"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\n\r\n\r\nconst Login = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, cargandoSpin, loginUser } = authContext;\r\n\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = user;\r\n\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //valido que no tenga campos vacios\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son necesarios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    loginUser(user);\r\n  };\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      history.push(\"/dashboard\");\r\n      if (mensaje) {\r\n        mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n      }\r\n    }\r\n  }, [mensaje, autenticado, props.history]);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"sing_in_form\">\r\n        <h2 className=\"titulo\">Iniciar Sesion</h2>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <div className=\"input_field\">\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario o Email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input_field\">\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn primario\"\r\n          value=\"Entrar\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","L:\\practicas\\proyects\\taskapp\\cliente\\src\\pages\\Auth\\Signin\\index.jsx",["188","189","190"],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\index.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationState.jsx",[],"L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationContext.jsx",["191"],"import React, {createContext} from 'react';\r\nconst AnimationContext = createContext();\r\nexport default AnimationContext;","L:\\practicas\\proyects\\taskapp\\cliente\\src\\context\\animations\\AnimationReducer.jsx",["192"],"//importar types\r\nimport {PANELAUTH} from '../../types';\r\nexport default ( state, action ) => {\r\n    switch (action.type) {\r\n      case PANELAUTH:\r\n          return{\r\n           panel: !state.panel\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"201","line":20,"column":39,"nodeType":"199","messageId":"200","endLine":20,"endColumn":58},{"ruleId":"197","severity":1,"message":"202","line":20,"column":78,"nodeType":"199","messageId":"200","endLine":20,"endColumn":94},{"ruleId":"203","severity":1,"message":"204","line":25,"column":8,"nodeType":"205","endLine":25,"endColumn":10,"suggestions":"206"},{"ruleId":"197","severity":1,"message":"207","line":131,"column":15,"nodeType":"199","messageId":"200","endLine":131,"endColumn":23},{"ruleId":"203","severity":1,"message":"208","line":17,"column":7,"nodeType":"205","endLine":17,"endColumn":9,"suggestions":"209"},{"ruleId":"197","severity":1,"message":"210","line":11,"column":5,"nodeType":"199","messageId":"200","endLine":11,"endColumn":15},{"ruleId":"197","severity":1,"message":"207","line":43,"column":15,"nodeType":"199","messageId":"200","endLine":43,"endColumn":23},{"ruleId":"197","severity":1,"message":"210","line":7,"column":5,"nodeType":"199","messageId":"200","endLine":7,"endColumn":15},{"ruleId":"197","severity":1,"message":"211","line":10,"column":13,"nodeType":"199","messageId":"200","endLine":10,"endColumn":22},{"ruleId":"203","severity":1,"message":"212","line":23,"column":8,"nodeType":"205","endLine":23,"endColumn":17,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":4,"column":1,"nodeType":"216","endLine":17,"endColumn":2},{"ruleId":"214","severity":1,"message":"215","line":11,"column":1,"nodeType":"216","endLine":46,"endColumn":2},{"ruleId":"203","severity":1,"message":"217","line":10,"column":7,"nodeType":"205","endLine":10,"endColumn":9,"suggestions":"218"},{"ruleId":"197","severity":1,"message":"219","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":14},{"ruleId":"197","severity":1,"message":"220","line":11,"column":33,"nodeType":"199","messageId":"200","endLine":11,"endColumn":45},{"ruleId":"203","severity":1,"message":"221","line":45,"column":6,"nodeType":"205","endLine":45,"endColumn":43,"suggestions":"222"},{"ruleId":"197","severity":1,"message":"223","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":15},{"ruleId":"197","severity":1,"message":"220","line":15,"column":33,"nodeType":"199","messageId":"200","endLine":15,"endColumn":45},{"ruleId":"203","severity":1,"message":"221","line":26,"column":6,"nodeType":"205","endLine":26,"endColumn":43,"suggestions":"224"},{"ruleId":"197","severity":1,"message":"225","line":1,"column":8,"nodeType":"199","messageId":"200","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":3,"column":1,"nodeType":"216","endLine":12,"endColumn":2},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'proyectosterminados' is assigned a value but never used.","'terminarProyecto' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'obtenerProyectos'. Either include it or remove the dependency array.","ArrayExpression",["228"],"'consulta' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'obtenerTareas' and 'proyectoActual._id'. Either include them or remove the dependency array.",["229"],"'TASK_STATE' is defined but never used.","'counttask' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mostrarAlerta' and 'userAuth'. Either include them or remove the dependency array.",["230"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'userAuth'. Either include it or remove the dependency array.",["231"],"'styled' is defined but never used.","'cargandoSpin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'mostrarAlerta'. Either include them or remove the dependency array.",["232"],"'SpinKit' is defined but never used.",["233"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [obtenerProyectos]",{"range":"246","text":"247"},"Update the dependencies array to be: [obtenerTareas, proyectoActual._id]",{"range":"248","text":"249"},"Update the dependencies array to be: [mensaje, mostrarAlerta, userAuth]",{"range":"250","text":"251"},"Update the dependencies array to be: [userAuth]",{"range":"252","text":"253"},"Update the dependencies array to be: [mensaje, autenticado, props.history, history, mostrarAlerta]",{"range":"254","text":"255"},"Update the dependencies array to be: [autenticado, history, mensaje, mostrarAlerta, props.history]",{"range":"256","text":"257"},[731,733],"[obtenerProyectos]",[706,708],"[obtenerTareas, proyectoActual._id]",[852,861],"[mensaje, mostrarAlerta, userAuth]",[387,389],"[userAuth]",[1289,1326],"[mensaje, autenticado, props.history, history, mostrarAlerta]",[895,932],"[autenticado, history, mensaje, mostrarAlerta, props.history]"]