[{"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\index.js":"1","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\App.js":"2","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\routes\\index.jsx":"3","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\routes\\PrivateRoute.js":"4","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\config\\tokenAuth.js":"5","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\config\\axios.js":"6","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\index.jsx":"7","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\index.jsx":"8","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\auth\\authContext.js":"9","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\auth\\authState.js":"10","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\task\\taskState.js":"11","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\alertas\\alertaState.js":"12","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\proyects\\proyectoState.js":"13","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\animations\\AnimationState.jsx":"14","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\auth\\authReducer.js":"15","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\task\\taskContext.js":"16","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\alertas\\alertaContext.js":"17","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\task\\taskReducer.js":"18","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\alertas\\alertaReducer.js":"19","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\proyects\\proyectoContext.js":"20","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\proyects\\proyectoReducer.js":"21","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\index.jsx":"22","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\index.jsx":"23","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\animations\\AnimationReducer.jsx":"24","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\animations\\AnimationContext.jsx":"25","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\types\\index.js":"26","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Signin\\index.jsx":"27","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Login\\index.jsx":"28","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\SideBar\\index.jsx":"29","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\Container\\index.jsx":"30","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Login\\styles.js":"31","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\NewProyect.jsx":"32","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\ProyectList.jsx":"33","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\EndProyects.jsx":"34","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\TaskBody.jsx":"35","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\Proyect.jsx":"36","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\FormTask.jsx":"37","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\TaskList.jsx":"38","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\Task.jsx":"39","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\styles.js":"40","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Signin\\styles.js":"41","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\styles.js":"42","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\index.js":"43","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\SideBar\\styles.js":"44","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\Container\\styles.js":"45","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\index.js":"46","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\index.js":"47"},{"size":263,"mtime":1631942349227,"results":"48","hashOfConfig":"49"},{"size":145,"mtime":1631942349194,"results":"50","hashOfConfig":"49"},{"size":1169,"mtime":1631942349255,"results":"51","hashOfConfig":"49"},{"size":636,"mtime":1631942349253,"results":"52","hashOfConfig":"49"},{"size":271,"mtime":1631942349202,"results":"53","hashOfConfig":"49"},{"size":144,"mtime":1631942349201,"results":"54","hashOfConfig":"49"},{"size":100,"mtime":1631942349252,"results":"55","hashOfConfig":"49"},{"size":692,"mtime":1631991011086,"results":"56","hashOfConfig":"49"},{"size":105,"mtime":1631942349213,"results":"57","hashOfConfig":"49"},{"size":2989,"mtime":1631988157420,"results":"58","hashOfConfig":"49"},{"size":2557,"mtime":1631988152803,"results":"59","hashOfConfig":"49"},{"size":1087,"mtime":1631942349207,"results":"60","hashOfConfig":"49"},{"size":4314,"mtime":1631988155887,"results":"61","hashOfConfig":"49"},{"size":1494,"mtime":1631942349212,"results":"62","hashOfConfig":"49"},{"size":1223,"mtime":1631942349214,"results":"63","hashOfConfig":"49"},{"size":105,"mtime":1631942349224,"results":"64","hashOfConfig":"49"},{"size":111,"mtime":1631942349205,"results":"65","hashOfConfig":"49"},{"size":1433,"mtime":1631942349225,"results":"66","hashOfConfig":"49"},{"size":403,"mtime":1631942349206,"results":"67","hashOfConfig":"49"},{"size":110,"mtime":1631942349219,"results":"68","hashOfConfig":"49"},{"size":3402,"mtime":1631942349221,"results":"69","hashOfConfig":"49"},{"size":1033,"mtime":1635523310448,"results":"70","hashOfConfig":"49"},{"size":1380,"mtime":1631990226778,"results":"71","hashOfConfig":"49"},{"size":1194,"mtime":1631942349210,"results":"72","hashOfConfig":"49"},{"size":120,"mtime":1631942349209,"results":"73","hashOfConfig":"49"},{"size":1589,"mtime":1631942349257,"results":"74","hashOfConfig":"49"},{"size":3826,"mtime":1631989762147,"results":"75","hashOfConfig":"49"},{"size":2753,"mtime":1631988912946,"results":"76","hashOfConfig":"49"},{"size":1949,"mtime":1631990559394,"results":"77","hashOfConfig":"49"},{"size":902,"mtime":1631991304127,"results":"78","hashOfConfig":"49"},{"size":1985,"mtime":1631989250784,"results":"79","hashOfConfig":"49"},{"size":3390,"mtime":1631991418057,"results":"80","hashOfConfig":"49"},{"size":2549,"mtime":1631942349244,"results":"81","hashOfConfig":"49"},{"size":2199,"mtime":1631942349240,"results":"82","hashOfConfig":"49"},{"size":2184,"mtime":1631942349248,"results":"83","hashOfConfig":"49"},{"size":1479,"mtime":1631942349243,"results":"84","hashOfConfig":"49"},{"size":3459,"mtime":1631988181939,"results":"85","hashOfConfig":"49"},{"size":1546,"mtime":1631988193020,"results":"86","hashOfConfig":"49"},{"size":3112,"mtime":1631942349247,"results":"87","hashOfConfig":"49"},{"size":1147,"mtime":1635523324324,"results":"88","hashOfConfig":"49"},{"size":1946,"mtime":1631989701296,"results":"89","hashOfConfig":"49"},{"size":318,"mtime":1631990051826,"results":"90","hashOfConfig":"49"},{"size":102,"mtime":1631990161425,"results":"91","hashOfConfig":"49"},{"size":1993,"mtime":1631990495768,"results":"92","hashOfConfig":"49"},{"size":699,"mtime":1631990681021,"results":"93","hashOfConfig":"49"},{"size":218,"mtime":1631991140341,"results":"94","hashOfConfig":"49"},{"size":196,"mtime":1631991293894,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1pyiyoa",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\index.js",[],["209","210"],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\App.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\routes\\index.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\routes\\PrivateRoute.js",["211"],"import React, { useContext, useEffect } from 'react';\r\nimport {Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({component: Component, ...props}) => {\r\n    const authContext = useContext(AuthContext);\r\n    const { cargando, autenticado, userAuth } = authContext;\r\n    useEffect(()=>{\r\n        userAuth();\r\n    },[]);\r\n    return (\r\n        <Route {...props} render = {props => !autenticado && !cargando      \r\n            ?( <Redirect  to=\"/\"/>)\r\n            :( <Component  {...props} /> )\r\n        }\r\n\r\n        />\r\n     );\r\n}\r\n \r\nexport default PrivateRoute;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\config\\tokenAuth.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\config\\axios.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\index.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\index.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\auth\\authContext.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\auth\\authState.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\task\\taskState.js",["212","213"],"import React, { useReducer } from \"react\";\r\n//import el context y el reducer\r\nimport TaskContext from \"./taskContext\";\r\nimport taskReducer from \"./taskReducer\";\r\n//import los types\r\nimport {\r\n  TASK_PROYECTO,\r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  DELETE_TASK,\r\n  TASK_STATE,\r\n  TASK_ACTUAL,\r\n  ACTUALIZAR_TASK,\r\n} from \"../../types\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst TaskState = (props) => {\r\n  //state inicial\r\n  const initialState = {\r\n    tareasproyecto: [],\r\n    errortarea: false,\r\n    tareaactual: null,\r\n  };\r\n  const [state, dispatch] = useReducer(taskReducer, initialState);\r\n  //Funciones\r\n  //obtener las tareas relacionadas con el id del proyecto\r\n  const obtenerTareas = async (proyecto) => {\r\n    try {\r\n      const peticion = await clienteAxios.get(\"/api/task\", {\r\n        params: { proyecto },\r\n      });\r\n\r\n      dispatch({\r\n        type: TASK_PROYECTO,\r\n        payload: peticion.data,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  //Agregar nueva tarea\r\n  const agregarTarea = async (tarea) => {\r\n    try {\r\n      const consulta = await clienteAxios.post(\"/api/task\", tarea);\r\n\r\n      dispatch({\r\n        type: AGREGAR_TAREA,\r\n        payload: tarea,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  //validar la tarea\r\n  const validarTarea = () => {\r\n    dispatch({\r\n      type: VALIDAR_TAREA,\r\n    });\r\n  };\r\n  //eliminar tarea\r\n  const eliminarTarea = async (id, proyecto) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/task/${id}`, { params: { proyecto } });\r\n      dispatch({\r\n        type: DELETE_TASK,\r\n        payload: id,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  //editar la tarea\r\n  const actualizarTask = async (tarea) => {\r\n    try {\r\n      const requestcambio = await clienteAxios.put(\r\n        `/api/task/${tarea._id}`,\r\n        tarea\r\n      );\r\n\r\n      dispatch({\r\n        type: ACTUALIZAR_TASK,\r\n        payload: requestcambio.data.tarea,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  const tareaActual = (tarea) => {\r\n    dispatch({\r\n      type: TASK_ACTUAL,\r\n      payload: tarea,\r\n    });\r\n  };\r\n  return (\r\n    <TaskContext.Provider\r\n      value={{\r\n        //valores del state\r\n        tareasproyecto: state.tareasproyecto,\r\n        errortarea: state.errortarea,\r\n        tareaactual: state.tareaactual,\r\n        counttask: state.counttask,\r\n        obtenerTareas,\r\n        agregarTarea,\r\n        validarTarea,\r\n        eliminarTarea,\r\n        tareaActual,\r\n        actualizarTask,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\nexport default TaskState;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\alertas\\alertaState.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\proyects\\proyectoState.js",["214"],"import React, { useReducer } from \"react\";\r\n//importo el context y el reducer\r\nimport ProyectoContext from \"./proyectoContext\";\r\nimport ProyectoReducer from \"./proyectoReducer\";\r\n//importo mis types\r\nimport {\r\n  MOSTRAR_FORMULARIO,\r\n  MOSTRAR_PROYECTOS,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTIVO,\r\n  ELIMINAR_PROYECTO,\r\n  MOSTRAR_TERMINADOS,\r\n  TERMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n  PROYECTO_NULL,\r\n} from \"../../types\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst ProyectoState = (props) => {\r\n  const InitialState = {\r\n    panel: false,\r\n    panelproyecto: false,\r\n    proyectos: [],\r\n    errorformulario: false,\r\n    proyectoactivo: null,\r\n    panelterminados: false,\r\n    proyectosterminados: [],\r\n    mensaje: null,\r\n    badge: false,\r\n    badgeT: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(ProyectoReducer, InitialState);\r\n  //mis funciones\r\n  const showPanel = () => {\r\n    dispatch({\r\n      type: MOSTRAR_FORMULARIO,\r\n    });\r\n  };\r\n  //mostarar el componente de proyectos\r\n  const mostrarPanel = () => {\r\n    dispatch({\r\n      type: MOSTRAR_PROYECTOS,\r\n    });\r\n  };\r\n  const mostrarTerminados = () => {\r\n    dispatch({\r\n      type: MOSTRAR_TERMINADOS,\r\n    });\r\n  };\r\n  //obtener los proyectos\r\n  const obtenerProyectos = async () => {\r\n    try {\r\n      const requestP = await clienteAxios.get(\"/api/proyect\");\r\n\r\n      dispatch({\r\n        type: OBTENER_PROYECTOS,\r\n        payload: requestP.data,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  //Agrega Proyectos\r\n  const agregarProyecto = async (proyect) => {\r\n    try {\r\n      const requestP = await clienteAxios.post(\"/api/proyect\", proyect);\r\n\r\n      dispatch({\r\n        type: AGREGAR_PROYECTO,\r\n        payload: requestP.data.proyect,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  //Valido el formulario\r\n  const validarFormulario = () => {\r\n    dispatch({\r\n      type: VALIDAR_FORMULARIO,\r\n    });\r\n  };\r\n  //Seleccionar y poner un proyecto como activo\r\n  const proyectoActual = (proyecto) => {\r\n    dispatch({\r\n      type: PROYECTO_ACTIVO,\r\n      payload: proyecto,\r\n    });\r\n  };\r\n  //Eliminar las tareas\r\n  const eliminarProyecto = async (proyectoID) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/proyect/${proyectoID}`);\r\n      dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoID,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error dash\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  const terminarProyecto = async (proyecto) => {\r\n    try {\r\n      const consulta = await clienteAxios.put(\r\n        `/api/proyect/${proyecto._id}`,\r\n        proyecto\r\n      );\r\n\r\n      dispatch({\r\n        type: TERMINAR_PROYECTO,\r\n        payload: proyecto,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const proyectoNull = () => {\r\n    dispatch({\r\n      type: PROYECTO_NULL,\r\n    });\r\n  };\r\n  return (\r\n    <ProyectoContext.Provider\r\n      value={{\r\n        //valores del state o las funciones a compartir con el arbol de componentes\r\n        panel: state.panel,\r\n        panelproyecto: state.panelproyecto,\r\n        proyectos: state.proyectos,\r\n        errorformulario: state.errorformulario,\r\n        proyectoactivo: state.proyectoactivo,\r\n        panelterminados: state.panelterminados,\r\n        proyectosterminados: state.proyectosterminados,\r\n        mensaje: state.mensaje,\r\n        badge: state.badge,\r\n        badgeT: state.badgeT,\r\n        mostrarPanel,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        showPanel,\r\n        validarFormulario,\r\n        proyectoActual,\r\n        eliminarProyecto,\r\n        mostrarTerminados,\r\n        terminarProyecto,\r\n        proyectoNull,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProyectoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProyectoState;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\animations\\AnimationState.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\auth\\authReducer.js",["215"],"//importo los types\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    OBTENER_USUARIO,\r\n    CERRAR_SESION\r\n} from '../../types';\r\n\r\nexport default (state, action)=>{\r\n    switch (action.type) {\r\n        case REGISTRO_EXITOSO:\r\n            case LOGIN_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token)\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false,\r\n                cargandoSpin: true\r\n        }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                autenticado: true,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false,\r\n                cargandoSpin: false\r\n        }\r\n        default:\r\n           return state;\r\n    }\r\n}","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\task\\taskContext.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\alertas\\alertaContext.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\task\\taskReducer.js",["216"],"//import los types\r\nimport {\r\n    TASK_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    DELETE_TASK,\r\n    TASK_STATE,\r\n    TASK_ACTUAL,\r\n    ACTUALIZAR_TASK\r\n} from '../../types';\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case TASK_PROYECTO:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            } \r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto:[action.payload, ...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case DELETE_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }       \r\n        case ACTUALIZAR_TASK:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map( tarea => (tarea._id === action.payload._id ?action.payload : tarea)),\r\n                tareaactual: null\r\n            }\r\n        case TASK_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaactual: action.payload\r\n            }       \r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\alertas\\alertaReducer.js",["217"],"//importo los types\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta: action.payload\r\n            }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\proyects\\proyectoContext.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\proyects\\proyectoReducer.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\index.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\index.jsx",["218"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Container, SideBar } from \"./auxiliars\";\r\nimport ProyectoContext from \"../../context/proyects/proyectoContext\";\r\nimport AuthContext from \"../../context/auth/authContext\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AnimationContext from \"../../context/animations/AnimationContext\";\r\nimport { DashboardContainer } from \"./styles\";\r\nconst DashboardPage = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { mensaje, proyectoActual } = proyectoContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { userAuth } = authContext;\r\n\r\n  const alertacontext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertacontext;\r\n\r\n  const animationContext = useContext(AnimationContext);\r\n  const { panelnuevoproyecto, panelproyectos, panelterminados } =\r\n    animationContext;\r\n\r\n  useEffect(() => {\r\n    userAuth();\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    if (panelnuevoproyecto || panelproyectos || panelterminados) {\r\n      proyectoActual(null);\r\n    }\r\n  }, [mensaje]);\r\n  return (\r\n    <DashboardContainer>\r\n      {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n      <SideBar />\r\n      <Container />\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\animations\\AnimationReducer.jsx",["219"],"//importar types\r\nimport {\r\n  PANELAUTH,\r\n  PANELNUEVO,\r\n  PANELPROYECTOS,\r\n  PANELTERMIANDOS,  \r\n  TODO_FALSE\r\n} from '../../types';\r\nexport default ( state, action ) => {\r\n    switch (action.type) {\r\n      case PANELAUTH:\r\n          return{\r\n           panel: !state.panel,\r\n           panelnuevoproyecto: false,\r\n           panelproyectos: false,\r\n           panelterminados: false\r\n          }\r\n      case PANELNUEVO:\r\n        return{\r\n          panelnuevoproyecto: !state.panelnuevoproyecto,\r\n          panelproyectos: false,\r\n          panelterminados: false\r\n        }\r\n      case PANELPROYECTOS:\r\n        return{\r\n          panelnuevoproyecto: false,\r\n          panelproyectos: !state.panelproyectos,\r\n          panelterminados: false\r\n\r\n        }\r\n      case PANELTERMIANDOS:\r\n        return{\r\n          panelnuevoproyecto:false,\r\n          panelproyectos: false,\r\n          panelterminados: !state.panelterminados\r\n        }        \r\n        case TODO_FALSE:\r\n          return{\r\n            panel: false,\r\n            panelnuevoproyecto: false,\r\n            panelproyectos: false,\r\n            panelterminados: false\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\context\\animations\\AnimationContext.jsx",["220"],"import React, {createContext} from 'react';\r\nconst AnimationContext = createContext();\r\nexport default AnimationContext;","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\types\\index.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Signin\\index.jsx",["221"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaUserAlt, FaLock, FaEnvelope } from \"react-icons/fa\";\r\nimport {\r\n  FormularioContainer,\r\n  Content,\r\n  Titulo,\r\n  InputField,\r\n  Button,\r\n  ButtonSec,\r\n} from \"./styles\";\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\nimport AnimationContext from \"../../../context/animations/AnimationContext\";\r\n\r\nconst SignIn = (props) => {\r\n  const animaContext = useContext(AnimationContext);\r\n  const { movePanelAuth } = animaContext;\r\n  //contexts\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, registerUser } = authContext;\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n  }, [autenticado, mensaje, props.history]);\r\n\r\n  const [usern, setUserN] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n  const { nombre, email, password, confirmar } = usern;\r\n  //Funciones\r\n  const handleChange = (e) => {\r\n    setUserN({\r\n      ...usern,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //pasword minimo de 6 caracteres\r\n    if (password.length < 6) {\r\n      mostrarAlerta(\r\n        \"el password debe ser de al menos 6 caracteres\",\r\n        \"alerta-error\"\r\n      );\r\n      return;\r\n    }\r\n    //los dos passwords iguales\r\n    if (password.trim() !== confirmar.trim()) {\r\n      mostrarAlerta(\"Los passwords deben ser iguales\", \"alerta-error\");\r\n      return;\r\n    }\r\n    //pasarlo al action\r\n    registerUser({\r\n      nombre,\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormularioContainer onSubmit={handleSubmit}>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <Titulo>Obtener una Cuenta</Titulo>\r\n        <InputField>\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaEnvelope />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmar\"\r\n            value={confirmar}\r\n            onChange={handleChange}\r\n            placeholder=\"Repetir Contraseña\"\r\n          />\r\n        </InputField>\r\n        <Button type=\"submit\" value=\"Continuar\" />\r\n      </FormularioContainer>\r\n      <Content>\r\n        <h3>¿Ya tienes una cuenta?</h3>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n        <ButtonSec onClick={() => movePanelAuth()} value=\"Iniciar Sesion\" />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Login\\index.jsx",["222","223","224"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  FormularioContainer,\r\n  Content,\r\n  Titulo,\r\n  InputField,\r\n  Button,\r\n  ButtonSec,\r\n} from \"./styles\";\r\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\r\nimport AlertaContext from \"../../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\nimport AnimationContext from \"../../../context/animations/AnimationContext\";\r\n\r\nconst Login = (props) => {\r\n  const animaContext = useContext(AnimationContext);\r\n  const { panel, movePanelAuth } = animaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, cargandoSpin, loginUser } = authContext;\r\n\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = user;\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //valido que no tenga campos vacios\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son necesarios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    loginUser(user);\r\n  };\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      history.push(\"/dashboard\");\r\n      if (mensaje) {\r\n        mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n      }\r\n    }\r\n  }, [mensaje, autenticado, props.history]);\r\n\r\n  return (\r\n    <>\r\n      <FormularioContainer onSubmit={handleSubmit}>\r\n        <Titulo>Iniciar Sesion</Titulo>\r\n        {alerta ? <div className={alerta.categoria}>{alerta.msg}</div> : null}\r\n        <InputField>\r\n          <FaUserAlt />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre de usuario o Email\"\r\n          />\r\n        </InputField>\r\n\r\n        <InputField>\r\n          <FaLock />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"Contraseña\"\r\n          />\r\n        </InputField>\r\n        <Button type=\"submit\" value=\"Entrar\" />\r\n      </FormularioContainer>\r\n      <Content>\r\n        <h3>¿Nuevo aqui?</h3>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. </p>\r\n        <ButtonSec\r\n          onClick={() => movePanelAuth()}\r\n          id=\"sing-up-btn\"\r\n          value=\"Registrarse\"\r\n        />\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\SideBar\\index.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\Container\\index.jsx",["225"],"import React, { useContext, useEffect } from \"react\";\r\nimport { NewProyect, ProyectList, EndProyects } from \"../proyects\";\r\nimport { TaskBody } from \"../task\";\r\nimport { AnimationContext, ProyectoContext } from \"../../../../context\";\r\nimport { ContainerDashboard, Box } from \"./styles\";\r\n\r\nfunction Container() {\r\n  const animaContext = useContext(AnimationContext);\r\n  const { panelproyectos, panelterminados, allFalse } = animaContext;\r\n\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { proyectoactivo } = proyectoContext;\r\n  useEffect(() => {\r\n    if (proyectoactivo) {\r\n      allFalse();\r\n    }\r\n  }, [proyectoactivo]);\r\n  return (\r\n    <ContainerDashboard>\r\n      <Box>\r\n        <NewProyect />\r\n        {panelproyectos ? <ProyectList /> : <TaskBody />}\r\n        {panelterminados && <EndProyects />}\r\n      </Box>\r\n    </ContainerDashboard>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Login\\styles.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\NewProyect.jsx",["226"],"import React, { useContext, useState } from \"react\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport AnimationContext from \"../../../../context/animations/AnimationContext\";\r\n\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst NewProyectContainer = styled.div`\r\n  background-color: #f3f3f3;\r\n  //min-height: 50vh;\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 0 0 35px 35px;\r\n  padding: 0.5rem;\r\n  position: absolute;\r\n  transform: ${(props) => props.transform};\r\n  z-index: 0;\r\n  transition: all 0.8s ease-in-out;\r\n  @media (min-width: 768px) {\r\n    transition: all 0.6s ease-in-out;\r\n    transform: ${(props) => props.transform};\r\n    border-radius: 0 25px 25px 0;\r\n    width: 20vw;\r\n    min-width: 250px;\r\n    left: 0;\r\n    top: 0;\r\n    box-shadow: 2px 0px 4px 0px rgba(0, 0, 0, 0.24);\r\n  }\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Input = styled.input`\r\n  padding: 0.5rem;\r\n  margin: 0.5rem 0;\r\n  border-radius: 35px;\r\n  outline: none;\r\n  border: none;\r\n  &:first-of-type {\r\n    background-color: white;\r\n    padding-left: 20px;\r\n    &:focus {\r\n      border: 1px solid #f02d7b;\r\n    }\r\n  }\r\n`;\r\nconst Text = styled.textarea`\r\n  resize: none;\r\n  min-height: 20vh;\r\n  border-radius: 35px;\r\n  padding: 1rem;\r\n  outline: none;\r\n  font-family: Helvetica, sans-serif;\r\n  &:focus {\r\n    border: 1px solid #f02d7b;\r\n  }\r\n`;\r\nconst ErrorMessage = styled.p``;\r\nconst Submit = styled.input`\r\n  background-color: #f02d7b;\r\n  color: white;\r\n  width: 80%;\r\n  align-self: center;\r\n`;\r\n\r\nconst NewProyect = () => {\r\n  //Contexts\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { panel, errorformulario, agregarProyecto, validarFormulario } =\r\n    proyectoContext;\r\n  const animationContext = useContext(AnimationContext);\r\n  const { panelnuevoproyecto } = animationContext;\r\n  //states internos\r\n  const [proyect, createProyect] = useState({\r\n    nombre: \"\",\r\n    desc: \"\",\r\n  });\r\n\r\n  const { nombre, desc } = proyect;\r\n\r\n  const handleChange = (e) => {\r\n    createProyect({\r\n      ...proyect,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //enviar lo que envia el usuario\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombre.trim() === \"\") {\r\n      validarFormulario();\r\n      return;\r\n    }\r\n    createProyect({\r\n      nombre: \"\",\r\n      desc: \"\",\r\n    });\r\n    agregarProyecto(proyect);\r\n  };\r\n\r\n  return (\r\n    <NewProyectContainer\r\n      transform={panelnuevoproyecto ? \" translateX(0)\" : \" translateX(-100vw)\"}\r\n    >\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Nombre del proyecto\"\r\n          name=\"nombre\"\r\n          value={nombre}\r\n          onChange={handleChange}\r\n          className=\"NewProyect_Form_input\"\r\n        />\r\n        <Text\r\n          type=\"text\"\r\n          maxLength=\"120\"\r\n          placeholder=\"Descripcion breve\"\r\n          name=\"desc\"\r\n          value={desc}\r\n          onChange={handleChange}\r\n          className=\"NewProyect_Form_TextArea\"\r\n        />\r\n        {errorformulario ? (\r\n          <ErrorMessage className=\"input_errorP\">\r\n            El nombre es necesario!\r\n          </ErrorMessage>\r\n        ) : null}\r\n        <Submit type=\"submit\" value=\"Guardar\" className=\"NewProyect_Btn\" />\r\n      </Form>\r\n    </NewProyectContainer>\r\n  );\r\n};\r\n\r\nexport default NewProyect;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\ProyectList.jsx",["227"],"import React, { useContext, useEffect } from \"react\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport AnimationContext from \"../../../../context/animations/AnimationContext\";\r\nimport Proyect from \"./Proyect\";\r\n//import \"./index.scss\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ProyectListContainer = styled.div`\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n  display: flex;\r\n  z-index: 3;\r\n  @media (min-width: 768px) {\r\n    padding: 0.5rem;\r\n    width: 95%;\r\n    overflow-y: auto;\r\n    height: 90%;\r\n    padding: 0.5rem;\r\n    &::-webkit-scrollbar {\r\n      -webkit-appearance: none;\r\n    }\r\n    &::-webkit-scrollbar:vertical {\r\n      width: 10px;\r\n    }\r\n    &::-webkit-scrollbar:horizontal {\r\n      height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: #797979;\r\n      border-radius: 20px;\r\n      border: 2px solid #f1f2f3;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n      border-radius: 10px;\r\n    }\r\n  }\r\n`;\r\nconst ButtonClose = styled.button`\r\n  background-color: #f02d7b;\r\n  border: none;\r\n  outline: none;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 35px;\r\n  cursor: pointer;\r\n  margin: 0.5rem;\r\n  svg {\r\n    color: white;\r\n  }\r\n`;\r\nconst ProyectMessage = styled.p``;\r\nconst LisContainer = styled.ul`\r\n  width: 95%;\r\n  @media (min-width: 768px) {\r\n    margin: 0 auto;\r\n    width: 95%;\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    align-items: center;\r\n  }\r\n`;\r\nconst ProyectList = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { proyectos, obtenerProyectos } = proyectoContext;\r\n\r\n  const animationContext = useContext(AnimationContext);\r\n  const { movePanelAuth } = animationContext;\r\n\r\n  //obtener proyectos cuando carga el componente\r\n  useEffect(() => {\r\n    obtenerProyectos();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ButtonClose onClick={() => movePanelAuth()}>\r\n        <VscChromeClose />\r\n      </ButtonClose>\r\n      <ProyectListContainer>\r\n        {proyectos.length === 0 ? (\r\n          <ProyectMessage className=\"object_list\">\r\n            Todavia no creaste ningun proyecto!\r\n          </ProyectMessage>\r\n        ) : (\r\n          <LisContainer>\r\n            {proyectos.map((proyecto) => (\r\n              <Proyect key={proyecto._id} proyecto={proyecto} />\r\n            ))}\r\n          </LisContainer>\r\n        )}\r\n      </ProyectListContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProyectList;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\EndProyects.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\TaskBody.jsx",["228"],"import React, { useContext } from \"react\";\r\nimport FormTask from \"./FormTask\";\r\nimport TaskList from \"./TaskList\";\r\nimport ProyectList from \"../proyects/ProyectList\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ContentMain = styled.main`\r\n  height: fit-content;\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 768px) {\r\n    height: 100%;\r\n  }\r\n`;\r\nconst Tittle = styled.h2`\r\n  font-weight: 200;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  margin-bottom: 0.7rem;\r\n  font-size: 19px;\r\n  color: #2f2f2f;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: fit-content;\r\n  margin: 5px auto;\r\n  padding: 0.5rem;\r\n`;\r\nconst Button = styled.button`\r\n  color: white;\r\n  background-color: #f02d7b;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 25px;\r\n  padding: 8px;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n`;\r\nconst ButtonClose = styled(Button)`\r\n  border-radius: 35px;\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\nconst TaskBody = () => {\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const {\r\n    proyectoactivo,\r\n    eliminarProyecto,\r\n    terminarProyecto,\r\n    proyectoNull,\r\n  } = proyectoContext;\r\n\r\n  if (!proyectoactivo) return null;\r\n\r\n  const handdleProyectState = (proyecto) => {\r\n    if (!proyecto.estado) {\r\n      proyecto.estado = true;\r\n    }\r\n    terminarProyecto(proyecto);\r\n  };\r\n  const [proyectoActual] = proyectoactivo;\r\n\r\n  return (\r\n    <ContentMain>\r\n      {/* {panelproyecto && <ProyectList />} */}\r\n      <ButtonClose type=\"button\" onClick={() => proyectoNull()}>\r\n        X\r\n      </ButtonClose>\r\n      <Tittle>{proyectoActual.nombre}</Tittle>\r\n      <FormTask />\r\n      <TaskList />\r\n      <ButtonContainer>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => handdleProyectState(proyectoActual)}\r\n        >\r\n          Terminar Proyecto\r\n        </Button>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => eliminarProyecto(proyectoActual._id)}\r\n        >\r\n          Eliminar Proyecto\r\n        </Button>\r\n      </ButtonContainer>\r\n    </ContentMain>\r\n  );\r\n};\r\n\r\nexport default TaskBody;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\Proyect.jsx",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\FormTask.jsx",["229"],"import React, { Fragment, useContext, useState, useEffect } from \"react\";\r\nimport TaskContext from \"../../../../context/task/taskContext\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst FormTaskContainer = styled.div`\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  //border: 1px solid red;\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  @media (min-width: 768px) {\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  margin-bottom: 0.5rem;\r\n  border: none;\r\n  background-color: #f2f2f2;\r\n  border-radius: 35px;\r\n  padding: 0.5rem;\r\n  padding-left: 1rem;\r\n  outline: none;\r\n  &::placeholder {\r\n    padding: 1rem;\r\n  }\r\n  @media (min-width: 768px) {\r\n    // width: 20%;\r\n  }\r\n`;\r\nconst InputSearch = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  padding: 0.6rem;\r\n  border-radius: 35px;\r\n  color: white;\r\n  background-color: #f02d7b;\r\n  outline: none;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) {\r\n    // width: 20%;\r\n  }\r\n`;\r\nconst Description = styled.div`\r\n  padding: 0.2rem;\r\n  text-align: center;\r\n  margin: 0.2rem 0;\r\n`;\r\nconst FormTask = () => {\r\n  const taskContext = useContext(TaskContext);\r\n  const {\r\n    tareaactual,\r\n    errortarea,\r\n    agregarTarea,\r\n    validarTarea,\r\n    obtenerTareas,\r\n    actualizarTask,\r\n  } = taskContext;\r\n\r\n  const proyectoContext = useContext(ProyectoContext);\r\n  const { proyectoactivo } = proyectoContext;\r\n  const [proyectoActual] = proyectoactivo;\r\n\r\n  const [tarea, setTarea] = useState({\r\n    nombre: \"\",\r\n  });\r\n  const { nombre } = tarea;\r\n  useEffect(() => {\r\n    if (tareaactual !== null) {\r\n      setTarea(tareaactual);\r\n    } else {\r\n      setTarea({\r\n        nombre: \"\",\r\n      });\r\n    }\r\n  }, [tareaactual]);\r\n\r\n  //Capturar lo que ingresa el usuario\r\n  const handleChange = (e) => {\r\n    setTarea({\r\n      ...tarea,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //Submit\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (nombre.trim() === \"\") {\r\n      validarTarea();\r\n      return;\r\n    }\r\n    //estoy agregando una nueva tarea\r\n    if (tareaactual === null) {\r\n      tarea.proyecto = proyectoActual._id;\r\n\r\n      agregarTarea(tarea);\r\n    } else {\r\n      //de lo contrario estoy actualizando la tarea\r\n      actualizarTask(tarea);\r\n    }\r\n    obtenerTareas(proyectoActual.id);\r\n    setTarea({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <FormTaskContainer>\r\n      {errortarea ? <p>El nombre para guardar la tarea es necesario</p> : null}\r\n      <div className=\"form_task_container\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Agregar una tarea!\"\r\n            className=\"input_task\"\r\n          />\r\n          <InputSearch\r\n            type=\"submit\"\r\n            value={tareaactual ? \"Guardar cambios\" : \"Agregar Nueva Tarea\"}\r\n            className=\"btn btn_submit\"\r\n          />\r\n        </Form>\r\n        <Description>\r\n          {proyectoActual.desc ? (\r\n            <p>{proyectoActual.desc}</p>\r\n          ) : (\r\n            <p>No agregaste una descripcion</p>\r\n          )}\r\n        </Description>\r\n      </div>\r\n    </FormTaskContainer>\r\n  );\r\n};\r\n\r\nexport default FormTask;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\TaskList.jsx",["230"],"import React, { useContext, useEffect } from \"react\";\r\nimport Task from \"./Task\";\r\nimport TaskContext from \"../../../../context/task/taskContext\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ListadoTareas = styled.div`\r\n  /* border: 1px solid blue; */\r\n  width: 100%;\r\n  height: 90%;\r\n  padding: 0.2rem;\r\n  overflow-y: auto;\r\n  &::-webkit-scrollbar {\r\n    -webkit-appearance: none;\r\n  }\r\n  &::-webkit-scrollbar:vertical {\r\n    width: 10px;\r\n  }\r\n  &::-webkit-scrollbar:horizontal {\r\n    height: 10px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #797979;\r\n    border-radius: 20px;\r\n    border: 2px solid #f1f2f3;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n  }\r\n  ul {\r\n    padding: 0.5rem;\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n    grid-gap: 0.7rem 0.5rem;\r\n    padding-bottom: 1rem;\r\n    @media (min-width: 768px) {\r\n      padding: 1rem;\r\n      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n      grid-gap: 1.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TaskList = () => {\r\n  const taskContext = useContext(TaskContext);\r\n  const { tareasproyecto } = taskContext;\r\n\r\n  return (\r\n    <ListadoTareas>\r\n      {tareasproyecto.length === 0 ? (\r\n        <p className=\"ntarea\">No hay tareas comenza creando una!</p>\r\n      ) : (\r\n        <ul>\r\n          {tareasproyecto.map((tarea) => (\r\n            <Task tarea={tarea} key={tarea._id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </ListadoTareas>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\Task.jsx",["231"],"import React, { useContext, useEffect } from \"react\";\r\nimport TaskContext from \"../../../../context/task/taskContext\";\r\nimport ProyectoContext from \"../../../../context/proyects/proyectoContext\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Tarea = styled.li`\r\n  // border: 1px solid green;\r\n  padding: 0.8rem;\r\n  height: 200px;\r\n  border-radius: 25px;\r\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.24);\r\n  display: grid;\r\n  grid-template-rows: 2fr 1fr; \r\n  p{\r\n      overflow-y: auto;\r\n      padding: 5px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    grid-template-rows: 2fr 30px;\r\n    height: 25vh;\r\n    background-color: #f2f2f2;\r\n  }\r\n`;\r\nconst ButtonStateContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media(min-width: 768px){\r\n      flex-direction: row;\r\n      justify-content: center;\r\n      padding-top: 5px;\r\n  }\r\n`;\r\n\r\nconst ButtonState = styled.button`\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  margin: 2.5px 0;\r\n  margin: 0 4px;\r\n  padding: 8px;\r\n  border-radius: 25px;\r\n  color: white;\r\n  background-color: #4b72a8;\r\n  \r\n  align-self: center;\r\n`;\r\nconst ButtonPending = styled(ButtonState)`\r\n    background-color: transparent;\r\n    border: 2px solid #4b72a8;\r\n    color: #4b72a8;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Task = ({ tarea }) => {\r\n  const taskContext = useContext(TaskContext);\r\n  const {\r\n    eliminarTarea,\r\n    obtenerTareas,\r\n    actualizarTask,\r\n    tareaActual,\r\n  } = taskContext;\r\n\r\n  const proyectContext = useContext(ProyectoContext);\r\n  const { proyectoactivo } = proyectContext;\r\n  //extraigo el proyecto activo para tener la referencia cuando actualice los proyectos\r\n  const [proyectoActual] = proyectoactivo;\r\n  useEffect(() => {\r\n    obtenerTareas(proyectoActual._id);\r\n  }, []);\r\n  const handleClick = (id) => {\r\n    eliminarTarea(id, proyectoActual._id);\r\n    // obtenerTareas(proyectoActual._id);\r\n  };\r\n  const cambiarEstadoTarea = (tarea) => {\r\n    if (tarea.estado) {\r\n      tarea.estado = false;\r\n    } else {\r\n      tarea.estado = true;\r\n    }\r\n    actualizarTask(tarea);\r\n  };\r\n\r\n  return (\r\n    <Tarea>\r\n      <p>{tarea.nombre}</p>\r\n      <ButtonStateContainer>\r\n        {tarea.estado ? (\r\n          <ButtonState\r\n            onClick={() => cambiarEstadoTarea(tarea)}\r\n            type=\"button\"\r\n            className=\"btn btn_estado task_completa\"\r\n          >\r\n            Completa\r\n          </ButtonState>\r\n        ) : (\r\n          <ButtonPending\r\n            onClick={() => cambiarEstadoTarea(tarea)}\r\n            type=\"button\"\r\n            className=\"btn btn_estado task_pendiente\"\r\n          >\r\n            Pendiente\r\n          </ButtonPending>\r\n        )}\r\n        <ButtonState\r\n          type=\"button\"\r\n          className=\"btn btn_eliminar\"\r\n          onClick={() => handleClick(tarea._id)}\r\n        >\r\n          Eliminar\r\n        </ButtonState>\r\n        <ButtonState\r\n          type=\"button\"\r\n          className=\"btn btn_editar\"\r\n          onClick={() => tareaActual(tarea)}\r\n        >\r\n          Editar\r\n        </ButtonState>\r\n      </ButtonStateContainer>\r\n    </Tarea>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\styles.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Auth\\Signin\\styles.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\styles.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\index.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\SideBar\\styles.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\Container\\styles.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\proyects\\index.js",[],"C:\\Users\\Lucas\\Desktop\\proyects\\ToDo-List\\src\\pages\\Dashboard\\auxiliars\\task\\index.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":10,"column":7,"nodeType":"238","endLine":10,"endColumn":9,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":11,"column":3,"nodeType":"242","messageId":"243","endLine":11,"endColumn":13},{"ruleId":"240","severity":1,"message":"244","line":42,"column":13,"nodeType":"242","messageId":"243","endLine":42,"endColumn":21},{"ruleId":"240","severity":1,"message":"244","line":127,"column":13,"nodeType":"242","messageId":"243","endLine":127,"endColumn":21},{"ruleId":"245","severity":1,"message":"246","line":11,"column":1,"nodeType":"247","endLine":46,"endColumn":2},{"ruleId":"240","severity":1,"message":"241","line":7,"column":5,"nodeType":"242","messageId":"243","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":4,"column":1,"nodeType":"247","endLine":17,"endColumn":2},{"ruleId":"236","severity":1,"message":"248","line":30,"column":6,"nodeType":"238","endLine":30,"endColumn":15,"suggestions":"249"},{"ruleId":"245","severity":1,"message":"246","line":9,"column":1,"nodeType":"247","endLine":47,"endColumn":2},{"ruleId":"240","severity":1,"message":"250","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"236","severity":1,"message":"251","line":34,"column":6,"nodeType":"238","endLine":34,"endColumn":43,"suggestions":"252"},{"ruleId":"240","severity":1,"message":"253","line":18,"column":11,"nodeType":"242","messageId":"243","endLine":18,"endColumn":16},{"ruleId":"240","severity":1,"message":"254","line":21,"column":33,"nodeType":"242","messageId":"243","endLine":21,"endColumn":45},{"ruleId":"236","severity":1,"message":"251","line":53,"column":6,"nodeType":"238","endLine":53,"endColumn":43,"suggestions":"255"},{"ruleId":"236","severity":1,"message":"256","line":17,"column":6,"nodeType":"238","endLine":17,"endColumn":22,"suggestions":"257"},{"ruleId":"240","severity":1,"message":"253","line":69,"column":11,"nodeType":"242","messageId":"243","endLine":69,"endColumn":16},{"ruleId":"236","severity":1,"message":"258","line":75,"column":6,"nodeType":"238","endLine":75,"endColumn":8,"suggestions":"259"},{"ruleId":"240","severity":1,"message":"260","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":19},{"ruleId":"240","severity":1,"message":"261","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"262","line":1,"column":29,"nodeType":"242","messageId":"243","endLine":1,"endColumn":38},{"ruleId":"236","severity":1,"message":"263","line":69,"column":6,"nodeType":"238","endLine":69,"endColumn":8,"suggestions":"264"},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userAuth'. Either include it or remove the dependency array.","ArrayExpression",["267"],"no-unused-vars","'TASK_STATE' is defined but never used.","Identifier","unusedVar","'consulta' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'mostrarAlerta', 'panelnuevoproyecto', 'panelproyectos', 'panelterminados', 'proyectoActual', and 'userAuth'. Either include them or remove the dependency array.",["268"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'mostrarAlerta'. Either include them or remove the dependency array.",["269"],"'panel' is assigned a value but never used.","'cargandoSpin' is assigned a value but never used.",["270"],"React Hook useEffect has a missing dependency: 'allFalse'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'obtenerProyectos'. Either include it or remove the dependency array.",["272"],"'ProyectList' is defined but never used.","'Fragment' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'obtenerTareas' and 'proyectoActual._id'. Either include them or remove the dependency array.",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [userAuth]",{"range":"288","text":"289"},"Update the dependencies array to be: [mensaje, mostrarAlerta, panelnuevoproyecto, panelproyectos, panelterminados, proyectoActual, userAuth]",{"range":"290","text":"291"},"Update the dependencies array to be: [autenticado, history, mensaje, mostrarAlerta, props.history]",{"range":"292","text":"293"},"Update the dependencies array to be: [mensaje, autenticado, props.history, history, mostrarAlerta]",{"range":"294","text":"295"},"Update the dependencies array to be: [allFalse, proyectoactivo]",{"range":"296","text":"297"},"Update the dependencies array to be: [obtenerProyectos]",{"range":"298","text":"299"},"Update the dependencies array to be: [obtenerTareas, proyectoActual._id]",{"range":"300","text":"301"},[387,389],"[userAuth]",[1141,1150],"[mensaje, mostrarAlerta, panelnuevoproyecto, panelproyectos, panelterminados, proyectoActual, userAuth]",[1069,1106],"[autenticado, history, mensaje, mostrarAlerta, props.history]",[1582,1619],"[mensaje, autenticado, props.history, history, mostrarAlerta]",[623,639],"[allFalse, proyectoactivo]",[1933,1935],"[obtenerProyectos]",[1757,1759],"[obtenerTareas, proyectoActual._id]"]